"""add_action_engine_fields_and_proposed_actions_table

Revision ID: dbefe17cedc1
Revises: 3c153496af59
Create Date: 2025-07-06 16:54:13.896523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dbefe17cedc1'
down_revision: Union[str, Sequence[str], None] = '3c153496af59'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('email_categories', sa.Column('action', sa.String(length=50), nullable=True))
    op.add_column('email_categories', sa.Column('action_delay_days', sa.Integer(), nullable=True))
    op.add_column('email_categories', sa.Column('action_enabled', sa.Boolean(), nullable=True))
    # Add a temporary column for the converted timestamp
    # Check if the column is JSONB before running the conversion
    conn = op.get_bind()
    col_type = conn.execute(sa.text("""
        SELECT data_type FROM information_schema.columns
        WHERE table_name = 'email_categories' AND column_name = 'created_at'
    """)).scalar()
    if col_type == 'jsonb':
        op.add_column('email_categories', sa.Column('created_at_new', sa.DateTime(timezone=True), nullable=True))
        op.execute("""
            UPDATE email_categories 
            SET created_at_new = (created_at->>'timestamp')::timestamp with time zone 
            WHERE created_at ? 'timestamp';
        """)
        op.drop_column('email_categories', 'created_at')
        op.alter_column('email_categories', 'created_at_new', new_column_name='created_at')
    op.drop_index(op.f('ix_emails_user_id_received_at'), table_name='emails')
    op.create_index('ix_emails_user_id_received_at', 'emails', ['user_id', sa.literal_column('received_at DESC')], unique=False)
    # ### end Alembic commands ###
    
    # ### manually added commands for proposed_actions table ###
    op.create_table('proposed_actions',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('email_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('category_id', sa.Integer(), nullable=False),
        sa.Column('action_type', sa.String(length=50), nullable=False),
        sa.Column('reason', sa.Text(), nullable=False),
        sa.Column('email_age_days', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False),
        sa.Column('status', sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(['category_id'], ['email_categories.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['email_id'], ['emails.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_proposed_actions_status', 'proposed_actions', ['status'], unique=False)
    op.create_index('ix_proposed_actions_user_id', 'proposed_actions', ['user_id'], unique=False)
    op.create_index('ix_proposed_actions_email_id', 'proposed_actions', ['email_id'], unique=False)
    op.create_index('ix_proposed_actions_category_id', 'proposed_actions', ['category_id'], unique=False)
    op.create_index('ix_proposed_actions_created_at', 'proposed_actions', ['created_at'], unique=False)
    op.create_index('ix_proposed_actions_action_type', 'proposed_actions', ['action_type'], unique=False)
    op.create_index('ix_proposed_actions_user_status', 'proposed_actions', ['user_id', 'status'], unique=False)
    # ### end manually added commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_emails_user_id_received_at', table_name='emails')
    op.create_index(op.f('ix_emails_user_id_received_at'), 'emails', ['user_id', 'received_at'], unique=False)
    # Add a temporary JSONB column
    op.add_column('email_categories', sa.Column('created_at_jsonb', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    
    # Convert timestamp back to JSONB format
    op.execute("""
        UPDATE email_categories 
        SET created_at_jsonb = jsonb_build_object('timestamp', created_at::text) 
        WHERE created_at IS NOT NULL
    """)
    
    # Drop the old column and rename the new one
    op.drop_column('email_categories', 'created_at')
    op.alter_column('email_categories', 'created_at_jsonb', new_column_name='created_at')
    op.drop_column('email_categories', 'action_enabled')
    op.drop_column('email_categories', 'action_delay_days')
    op.drop_column('email_categories', 'action')
    # ### end Alembic commands ###
    
    # ### manually added commands for proposed_actions table ###
    op.drop_index('ix_proposed_actions_user_status', table_name='proposed_actions')
    op.drop_index('ix_proposed_actions_action_type', table_name='proposed_actions')
    op.drop_index('ix_proposed_actions_created_at', table_name='proposed_actions')
    op.drop_index('ix_proposed_actions_category_id', table_name='proposed_actions')
    op.drop_index('ix_proposed_actions_email_id', table_name='proposed_actions')
    op.drop_index('ix_proposed_actions_user_id', table_name='proposed_actions')
    op.drop_index('ix_proposed_actions_status', table_name='proposed_actions')
    op.drop_table('proposed_actions')
    # ### end manually added commands ###
