{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/ui/search-input.tsx"],"sourcesContent":["interface SearchInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  className?: string;\n}\n\nexport function SearchInput({ value, onChange, placeholder = 'Search...', className = '' }: SearchInputProps) {\n  return (\n    <div className={`relative ${className}`}>\n      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n        <svg\n          className=\"h-5 w-5 text-gray-400\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        className=\"block w-full rounded-md border border-gray-300 bg-white pl-10 pr-3 py-2.5 text-sm shadow-sm\n                  placeholder:text-gray-500 \n                  focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\n                  transition-colors duration-150\"\n        placeholder={placeholder}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAOO,SAAS,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,WAAW,EAAE,YAAY,EAAE,EAAoB;IAC1G,qBACE,6LAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;;0BACrC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAU;oBACV,OAAM;oBACN,SAAQ;oBACR,MAAK;oBACL,eAAY;8BAEZ,cAAA,6LAAC;wBACC,UAAS;wBACT,GAAE;wBACF,UAAS;;;;;;;;;;;;;;;;0BAIf,6LAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,WAAU;gBAIV,aAAa;;;;;;;;;;;;AAIrB;KA9BgB"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/utils/date-utils.ts"],"sourcesContent":["export function formatRelativeTime(date: Date): string {\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n  \n  // Less than a minute\n  if (diffInSeconds < 60) {\n    return 'just now';\n  }\n  \n  // Less than an hour\n  const diffInMinutes = Math.floor(diffInSeconds / 60);\n  if (diffInMinutes < 60) {\n    return `${diffInMinutes}m ago`;\n  }\n  \n  // Less than a day\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  if (diffInHours < 24) {\n    return `${diffInHours}h ago`;\n  }\n  \n  // Less than a week\n  const diffInDays = Math.floor(diffInHours / 24);\n  if (diffInDays < 7) {\n    return `${diffInDays}d ago`;\n  }\n  \n  // More than a week - format as date\n  const options: Intl.DateTimeFormatOptions = {\n    month: 'short',\n    day: 'numeric'\n  };\n  \n  // Add year if not current year\n  if (date.getFullYear() !== now.getFullYear()) {\n    options.year = 'numeric';\n  }\n  \n  return date.toLocaleDateString('en-US', options);\n} "],"names":[],"mappings":";;;AAAO,SAAS,mBAAmB,IAAU;IAC3C,MAAM,MAAM,IAAI;IAChB,MAAM,gBAAgB,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;IAEpE,qBAAqB;IACrB,IAAI,gBAAgB,IAAI;QACtB,OAAO;IACT;IAEA,oBAAoB;IACpB,MAAM,gBAAgB,KAAK,KAAK,CAAC,gBAAgB;IACjD,IAAI,gBAAgB,IAAI;QACtB,OAAO,GAAG,cAAc,KAAK,CAAC;IAChC;IAEA,kBAAkB;IAClB,MAAM,cAAc,KAAK,KAAK,CAAC,gBAAgB;IAC/C,IAAI,cAAc,IAAI;QACpB,OAAO,GAAG,YAAY,KAAK,CAAC;IAC9B;IAEA,mBAAmB;IACnB,MAAM,aAAa,KAAK,KAAK,CAAC,cAAc;IAC5C,IAAI,aAAa,GAAG;QAClB,OAAO,GAAG,WAAW,KAAK,CAAC;IAC7B;IAEA,oCAAoC;IACpC,MAAM,UAAsC;QAC1C,OAAO;QACP,KAAK;IACP;IAEA,+BAA+B;IAC/B,IAAI,KAAK,WAAW,OAAO,IAAI,WAAW,IAAI;QAC5C,QAAQ,IAAI,GAAG;IACjB;IAEA,OAAO,KAAK,kBAAkB,CAAC,SAAS;AAC1C"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/ui/email-label.tsx"],"sourcesContent":["'use client';\n\nimport React, { useMemo } from 'react';\nimport { useCategoryContext } from '@/lib/category-context';\n\ninterface EmailLabelProps {\n  label: string;\n  className?: string;\n  variant?: 'default' | 'compact';\n  showPrefix?: boolean;\n}\n\n/**\n * Converts raw Gmail labels to user-friendly display labels\n */\nexport function getDisplayLabel(label: string): string {\n  // First check if it's a category label (those should be handled by the category context)\n  if (label.startsWith('CATEGORY_') || label === 'PRIMARY') {\n    return ''; // This will be handled by getCategoryInfo in components\n  }\n  \n  // For non-category labels, use this mapping\n  const labelMap: Record<string, string> = {\n    'INBOX': 'Inbox',\n    'UNREAD': 'Unread',\n    'TRASH': 'Trash',\n    'IMPORTANT': 'â˜…',\n    'ARCHIVE': 'Archive',\n  };\n  \n  return labelMap[label] || label;\n}\n\n/**\n * Gets the appropriate styling for different label types\n */\nexport function getLabelStyle(label: string): string {\n  // If it's a category label, this will be handled by the category context elsewhere\n  if (label.startsWith('CATEGORY_') || label === 'PRIMARY') {\n    return '';\n  }\n  \n  // Define different background and text colors for different labels\n  switch (label.toUpperCase()) {\n    case 'INBOX':\n      return 'bg-blue-100 text-blue-800 border border-blue-200';\n    case 'UNREAD':\n      return 'bg-yellow-100 text-yellow-800 border border-yellow-200';\n    case 'TRASH':\n      return 'bg-red-100 text-red-800 border border-red-200';\n    case 'IMPORTANT':\n      return 'bg-amber-100 text-amber-800 border border-amber-200';\n    case 'ARCHIVE':\n      return 'bg-gray-100 text-gray-800 border border-gray-200';\n    default:\n      return 'bg-gray-100 text-gray-800 border border-gray-200';\n  }\n}\n\n/**\n * Email label component that displays a user-friendly label with appropriate styling\n */\nexport function EmailLabel({ label, className = '', variant = 'default', showPrefix = true }: EmailLabelProps) {\n  const { getCategoryInfo } = useCategoryContext();\n  \n  // For category labels, get info from the context\n  const isCategoryLabel = label.startsWith('CATEGORY_') || label === 'PRIMARY';\n  const categoryInfo = isCategoryLabel ? getCategoryInfo(label) : null;\n  \n  // If this is a category label and we have category info, use that\n  if (isCategoryLabel && categoryInfo) {\n    const baseClasses = variant === 'compact' \n      ? 'px-2 py-0.5 text-xs font-medium rounded-full'\n      : 'px-2.5 py-0.5 text-xs font-medium rounded-full';\n      \n    return (\n      <span className={`${baseClasses} ${categoryInfo.color} ${className}`}>\n        {showPrefix && <span className=\"mr-1 opacity-70\">Category:</span>}\n        {categoryInfo.display_name}\n      </span>\n    );\n  }\n  \n  // For non-category labels, use the original logic\n  const displayLabel = getDisplayLabel(label);\n  const style = getLabelStyle(label);\n  const isImportant = label.toUpperCase() === 'IMPORTANT';\n  \n  // For important label, show just the star\n  if (isImportant) {\n    return (\n      <span className={`inline-flex items-center text-amber-500 ${className}`} title=\"Important\">\n        {displayLabel}\n      </span>\n    );\n  }\n  \n  // For compact variant, use smaller padding\n  const baseClasses = variant === 'compact' \n    ? 'px-2 py-0.5 text-xs font-medium rounded-full'\n    : 'px-2.5 py-0.5 text-xs font-medium rounded-full';\n  \n  return (\n    <span className={`${baseClasses} ${style} ${className}`}>\n      {showPrefix && !isImportant && label !== 'INBOX' && <span className=\"mr-1 opacity-70\">Label:</span>}\n      {displayLabel}\n    </span>\n  );\n}\n\n/**\n * Filters and maps raw Gmail labels to display-friendly EmailLabel components\n */\nexport function mapLabelsToComponents(\n  labels: string[], \n  options: { \n    showSystem?: boolean;\n    variant?: 'default' | 'compact';\n    includeCategoryLabels?: boolean;\n    showPrefix?: boolean;\n  } = {}\n): React.ReactNode[] {\n  const { showSystem = false, variant = 'default', includeCategoryLabels = false, showPrefix = true } = options;\n  \n  if (!labels || labels.length === 0) return [];\n  \n  // System labels that shouldn't be displayed\n  const systemLabels = ['EA_NEEDS_LABEL_UPDATE', 'SENT', 'DRAFT'];\n  \n  // Important label should always be first if present\n  const sortedLabels = [...labels].sort((a, b) => {\n    if (a === 'IMPORTANT') return -1;\n    if (b === 'IMPORTANT') return 1;\n    return 0;\n  });\n  \n  return sortedLabels\n    .filter(label => {\n      if (!showSystem && systemLabels.includes(label)) return false;\n      // Don't show category labels here unless explicitly requested\n      if (!includeCategoryLabels && (label.startsWith('CATEGORY_') || label === 'PRIMARY')) return false;\n      return true;\n    })\n    .map(label => (\n      <EmailLabel key={label} label={label} variant={variant} showPrefix={showPrefix} />\n    ));\n} "],"names":[],"mappings":";;;;;;;AAGA;;;AAHA;;AAeO,SAAS,gBAAgB,KAAa;IAC3C,yFAAyF;IACzF,IAAI,MAAM,UAAU,CAAC,gBAAgB,UAAU,WAAW;QACxD,OAAO,IAAI,wDAAwD;IACrE;IAEA,4CAA4C;IAC5C,MAAM,WAAmC;QACvC,SAAS;QACT,UAAU;QACV,SAAS;QACT,aAAa;QACb,WAAW;IACb;IAEA,OAAO,QAAQ,CAAC,MAAM,IAAI;AAC5B;AAKO,SAAS,cAAc,KAAa;IACzC,mFAAmF;IACnF,IAAI,MAAM,UAAU,CAAC,gBAAgB,UAAU,WAAW;QACxD,OAAO;IACT;IAEA,mEAAmE;IACnE,OAAQ,MAAM,WAAW;QACvB,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAKO,SAAS,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,UAAU,SAAS,EAAE,aAAa,IAAI,EAAmB;;IAC3G,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,qBAAkB,AAAD;IAE7C,iDAAiD;IACjD,MAAM,kBAAkB,MAAM,UAAU,CAAC,gBAAgB,UAAU;IACnE,MAAM,eAAe,kBAAkB,gBAAgB,SAAS;IAEhE,kEAAkE;IAClE,IAAI,mBAAmB,cAAc;QACnC,MAAM,cAAc,YAAY,YAC5B,iDACA;QAEJ,qBACE,6LAAC;YAAK,WAAW,GAAG,YAAY,CAAC,EAAE,aAAa,KAAK,CAAC,CAAC,EAAE,WAAW;;gBACjE,4BAAc,6LAAC;oBAAK,WAAU;8BAAkB;;;;;;gBAChD,aAAa,YAAY;;;;;;;IAGhC;IAEA,kDAAkD;IAClD,MAAM,eAAe,gBAAgB;IACrC,MAAM,QAAQ,cAAc;IAC5B,MAAM,cAAc,MAAM,WAAW,OAAO;IAE5C,0CAA0C;IAC1C,IAAI,aAAa;QACf,qBACE,6LAAC;YAAK,WAAW,CAAC,wCAAwC,EAAE,WAAW;YAAE,OAAM;sBAC5E;;;;;;IAGP;IAEA,2CAA2C;IAC3C,MAAM,cAAc,YAAY,YAC5B,iDACA;IAEJ,qBACE,6LAAC;QAAK,WAAW,GAAG,YAAY,CAAC,EAAE,MAAM,CAAC,EAAE,WAAW;;YACpD,cAAc,CAAC,eAAe,UAAU,yBAAW,6LAAC;gBAAK,WAAU;0BAAkB;;;;;;YACrF;;;;;;;AAGP;GA9CgB;;QACc,qIAAA,CAAA,qBAAkB;;;KADhC;AAmDT,SAAS,sBACd,MAAgB,EAChB,UAKI,CAAC,CAAC;IAEN,MAAM,EAAE,aAAa,KAAK,EAAE,UAAU,SAAS,EAAE,wBAAwB,KAAK,EAAE,aAAa,IAAI,EAAE,GAAG;IAEtG,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG,OAAO,EAAE;IAE7C,4CAA4C;IAC5C,MAAM,eAAe;QAAC;QAAyB;QAAQ;KAAQ;IAE/D,oDAAoD;IACpD,MAAM,eAAe;WAAI;KAAO,CAAC,IAAI,CAAC,CAAC,GAAG;QACxC,IAAI,MAAM,aAAa,OAAO,CAAC;QAC/B,IAAI,MAAM,aAAa,OAAO;QAC9B,OAAO;IACT;IAEA,OAAO,aACJ,MAAM,CAAC,CAAA;QACN,IAAI,CAAC,cAAc,aAAa,QAAQ,CAAC,QAAQ,OAAO;QACxD,8DAA8D;QAC9D,IAAI,CAAC,yBAAyB,CAAC,MAAM,UAAU,CAAC,gBAAgB,UAAU,SAAS,GAAG,OAAO;QAC7F,OAAO;IACT,GACC,GAAG,CAAC,CAAA,sBACH,6LAAC;YAAuB,OAAO;YAAO,SAAS;YAAS,YAAY;WAAnD;;;;;AAEvB"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/utils/toast-config.ts"],"sourcesContent":["// Toast configuration settings for consistent behavior across the application\n\nimport { toast, ToastOptions } from 'react-hot-toast';\n\n// Extended duration for toasts (6 seconds instead of default 3)\nexport const defaultToastOptions: ToastOptions = {\n  duration: 6000, // 6 seconds\n  position: 'top-right',\n};\n\n// Wrapper functions to ensure consistent toast behavior\nexport const showSuccessToast = (message: string, options?: ToastOptions) => {\n  return toast.success(message, { ...defaultToastOptions, ...options });\n};\n\nexport const showErrorToast = (message: string, options?: ToastOptions) => {\n  return toast.error(message, { ...defaultToastOptions, ...options });\n};\n\nexport const showLoadingToast = (message: string, options?: ToastOptions) => {\n  return toast.loading(message, { ...defaultToastOptions, ...options });\n};\n\n// Utility to dismiss all toasts\nexport const dismissAllToasts = () => {\n  toast.dismiss();\n}; "],"names":[],"mappings":"AAAA,8EAA8E;;;;;;;;AAE9E;;AAGO,MAAM,sBAAoC;IAC/C,UAAU;IACV,UAAU;AACZ;AAGO,MAAM,mBAAmB,CAAC,SAAiB;IAChD,OAAO,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACrE;AAEO,MAAM,iBAAiB,CAAC,SAAiB;IAC9C,OAAO,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACnE;AAEO,MAAM,mBAAmB,CAAC,SAAiB;IAChD,OAAO,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACrE;AAGO,MAAM,mBAAmB;IAC9B,0JAAA,CAAA,QAAK,CAAC,OAAO;AACf"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/ui/email-card.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Link from 'next/link';\nimport { Email, archiveEmail, deleteEmail, updateEmailLabels, updateEmailCategory } from '@/lib/api';\nimport { formatRelativeTime } from '@/utils/date-utils';\nimport { EmailLabel, mapLabelsToComponents } from '@/components/ui/email-label';\nimport { toast } from 'react-hot-toast';\nimport { showSuccessToast, showErrorToast, showLoadingToast, dismissAllToasts } from '@/utils/toast-config';\nimport { useCategoryContext } from '@/lib/category-context';\n\n// Filter out system labels and get the primary category label for display\nfunction getPrimaryDisplayLabel(labels: string[]): string | null {\n  if (!labels || labels.length === 0) return null;\n  \n  // Priority order for display\n  const categoryLabels = [\n    'CATEGORY_PERSONAL',\n    'CATEGORY_UPDATES',\n    'CATEGORY_SOCIAL',\n    'CATEGORY_PROMOTIONS',\n    'CATEGORY_FORUMS',\n    'IMPORTANT',\n    'ARCHIVE',\n    'TRASH'\n  ];\n  \n  // Find the first matching category label\n  for (const categoryLabel of categoryLabels) {\n    if (labels.includes(categoryLabel)) {\n      return categoryLabel;\n    }\n  }\n  \n  // If no category labels, show Inbox if present\n  if (labels.includes('INBOX')) {\n    return 'INBOX';\n  }\n  \n  return null;\n}\n\n// Get category display info\nfunction getCategoryDisplayInfo(category: string): { display_name: string; color: string; description: string | null } | null {\n  // This function should be used with the CategoryContext's getCategoryInfo\n  // It remains here for compatibility with existing code, but will delegate to the context\n  \n  // Default category information if needed - we'll use the same format as CategoryContext\n  const defaultCategoryMap: Record<string, { display_name: string; color: string; description: string | null }> = {\n    'CATEGORY_PERSONAL': { display_name: 'Personal', color: 'bg-indigo-100 text-indigo-800 border border-indigo-200', description: null },\n    'CATEGORY_UPDATES': { display_name: 'Updates', color: 'bg-purple-100 text-purple-800 border border-purple-200', description: null },\n    'CATEGORY_SOCIAL': { display_name: 'Social', color: 'bg-green-100 text-green-800 border border-green-200', description: null },\n    'CATEGORY_PROMOTIONS': { display_name: 'Promotions', color: 'bg-orange-100 text-orange-800 border border-orange-200', description: null },\n    'CATEGORY_FORUMS': { display_name: 'Forums', color: 'bg-teal-100 text-teal-800 border border-teal-200', description: null },\n    'PRIMARY': { display_name: 'Primary', color: 'bg-blue-100 text-blue-800 border border-blue-200', description: null },\n  };\n\n  return defaultCategoryMap[category] || null;\n}\n\n// Separate labels into categories and regular labels\nfunction separateLabels(labels: string[]): { categories: string[]; regularLabels: string[] } {\n  const categories = labels.filter(label => label.startsWith('CATEGORY_') || label === 'PRIMARY');\n  const regularLabels = labels.filter(label => \n    !label.startsWith('CATEGORY_') && \n    !label.startsWith('EA_') && \n    label !== 'PRIMARY' &&\n    !['SENT', 'DRAFT'].includes(label)\n  );\n  \n  return { categories, regularLabels };\n}\n\ninterface EmailCardProps {\n  email: Email;\n  onClick?: () => void;\n  isDeleted?: boolean;\n  onLabelsUpdated?: (updatedEmail: Email) => void;\n}\n\nexport function EmailCard({ email, onClick, isDeleted = false, onLabelsUpdated }: EmailCardProps) {\n  // Use the category context\n  const { getCategoryInfo, categories } = useCategoryContext();\n  const [updating, setUpdating] = useState(false);\n  const [showCategoryDropdown, setShowCategoryDropdown] = useState(false);\n  const categoryBadgeRef = useRef<HTMLDivElement>(null);\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0 });\n  const [showArrowAnimation, setShowArrowAnimation] = useState(true);\n  \n  // Disable arrow animation after a short delay\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowArrowAnimation(false);\n    }, 2000);\n    \n    return () => clearTimeout(timer);\n  }, []);\n  \n  // Update dropdown position when it's shown\n  useEffect(() => {\n    if (showCategoryDropdown && categoryBadgeRef.current) {\n      const rect = categoryBadgeRef.current.getBoundingClientRect();\n      setDropdownPosition({\n        top: rect.bottom + window.scrollY,\n        left: rect.left + window.scrollX\n      });\n    }\n  }, [showCategoryDropdown]);\n  \n  // Filter out system labels\n  const filteredLabels = React.useMemo(() => {\n    if (!email.labels || email.labels.length === 0) return [];\n    \n    // Filter out system labels and category labels (we'll show categories separately)\n    const systemLabels = ['EA_NEEDS_LABEL_UPDATE', 'SENT', 'DRAFT'];\n    const visibleLabels = email.labels.filter(label => \n      !systemLabels.includes(label) && \n      !label.startsWith('CATEGORY_')\n    );\n    \n    // If this email has TRASH label, don't display INBOX label\n    if (visibleLabels.includes('TRASH')) {\n      return visibleLabels.filter(label => label !== 'INBOX');\n    }\n    \n    return visibleLabels;\n  }, [email.labels]);\n\n  // Get category display info\n  const categoryInfo = React.useMemo(() => {\n    // First check if the email has the TRASH label, and if so, prioritize it\n    if (email.labels && email.labels.includes('TRASH')) {\n      return getCategoryInfo('TRASH') || { display_name: 'Trash', color: 'bg-red-50 text-red-700', description: null };\n    }\n    \n    // If we have a category value from the email, use that\n    if (email.category) {\n      const info = getCategoryInfo(email.category);\n      if (info) return info;\n    }\n    \n    // If no category is found or the lookup failed, check if the email has a category label\n    if (email.labels) {\n      const categoryLabel = email.labels.find(label => label.startsWith('CATEGORY_') || label === 'PRIMARY');\n      if (categoryLabel) {\n        const info = getCategoryInfo(categoryLabel);\n        if (info) return info;\n      }\n    }\n    \n    // Default fallback\n    return getCategoryInfo('primary') || { display_name: 'Primary', color: 'bg-blue-50 text-blue-700', description: null };\n  }, [email.category, email.labels, getCategoryInfo]);\n\n  // Handle archive action\n  const handleArchive = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    try {\n      const toastId = showLoadingToast('Archiving email...');\n      \n      const response = await archiveEmail(email.id);\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast(response.message || 'Email archived successfully');\n        \n        // Update the email object with new labels\n        const updatedEmail = {\n          ...email,\n          labels: response.labels || email.labels,\n          // Update the category if returned from the API\n          category: response.category || email.category\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to archive email');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error archiving email';\n      showErrorToast(errorMessage);\n      console.error('Error archiving email:', error);\n    }\n  };\n  \n  // Handle trash action\n  const handleTrash = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    try {\n      const toastId = showLoadingToast('Moving to trash...');\n      \n      const response = await deleteEmail(email.id);\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast(response.message || 'Email moved to trash');\n        \n        // Update the email object with new category and labels\n        const updatedEmail = {\n          ...email,\n          category: 'trash',\n          labels: [...(email.labels || []).filter(label => label !== 'INBOX'), 'TRASH'],\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to move email to trash');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error moving email to trash';\n      showErrorToast(errorMessage);\n      console.error('Error moving email to trash:', error);\n    }\n  };\n\n  // Handle mark as read action\n  const handleMarkAsRead = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Skip if already read\n    if (email.is_read) {\n      return;\n    }\n    \n    try {\n      const toastId = showLoadingToast('Marking as read...');\n      \n      const response = await updateEmailLabels(email.id, [], ['UNREAD']);\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast('Email marked as read');\n        \n        // Update the email object with new read status\n        const updatedEmail = {\n          ...email,\n          is_read: true,\n          labels: response.labels || email.labels,\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to mark email as read');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error marking email as read';\n      showErrorToast(errorMessage);\n      console.error('Error marking email as read:', error);\n    }\n  };\n\n  // Handle mark as unread action\n  const handleMarkAsUnread = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Skip if already unread\n    if (!email.is_read) {\n      return;\n    }\n    \n    try {\n      const toastId = showLoadingToast('Marking as unread...');\n      \n      const response = await updateEmailLabels(email.id, ['UNREAD'], []);\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast('Email marked as unread');\n        \n        // Update the email object with new read status\n        const updatedEmail = {\n          ...email,\n          is_read: false,\n          labels: response.labels || email.labels,\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to mark email as unread');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error marking email as unread';\n      showErrorToast(errorMessage);\n      console.error('Error marking email as unread:', error);\n    }\n  };\n\n  // Handle category change\n  const handleCategoryChange = async (e: React.MouseEvent<HTMLElement>, newCategory: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Skip if already in this category\n    if (email.category?.toLowerCase() === newCategory.toLowerCase()) {\n      return;\n    }\n    \n    try {\n      setUpdating(true);\n      const toastId = showLoadingToast('Updating category...');\n      \n      const response = await updateEmailCategory(email.id, newCategory.toLowerCase());\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast('Category updated');\n        \n        // Update the email object with new category and labels\n        const updatedEmail = {\n          ...email,\n          category: response.category,\n          labels: response.labels,\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to update category');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error updating category';\n      showErrorToast(errorMessage);\n      console.error('Error updating category:', error);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  // Create the email card content\n  const emailContent = (\n    <div \n      className={`p-4 border-b border-gray-200 hover:bg-gray-50 cursor-pointer transition-all ${!email.is_read ? 'bg-slate-50' : ''}`}\n      onClick={onClick}\n    >\n      <div className=\"flex items-start gap-3\">\n        <div className=\"flex-shrink-0 mt-0.5\">\n          {!email.is_read && (\n            <div className=\"h-2 w-2 rounded-full bg-blue-600\" title=\"Unread\"></div>\n          )}\n        </div>\n        \n        <div className=\"min-w-0 flex-1\">\n          <div className=\"flex items-center justify-between mb-1\">\n            <div className=\"truncate font-medium text-sm\">\n              {email.from_email}\n            </div>\n            <div className=\"text-xs text-gray-500 whitespace-nowrap ml-2\">\n              {formatRelativeTime(new Date(email.received_at))}\n            </div>\n          </div>\n          \n          <div className=\"flex justify-between items-start\">\n            <div className=\"truncate font-medium text-base mb-1\">\n              {email.subject || '(No subject)'}\n            </div>\n          </div>\n          \n          <div className=\"text-sm text-gray-500 line-clamp-1 mb-2\">\n            {email.snippet}\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              {/* Category badge */}\n              <div className=\"relative\">\n                <div \n                  ref={categoryBadgeRef}\n                  className={`text-xs px-2 py-1 rounded-md bg-white shadow-sm cursor-pointer flex items-center gap-1 hover:shadow transition-all border border-gray-300 hover:border-gray-400 ${showCategoryDropdown ? 'ring-2 ring-blue-300 border-blue-300' : ''}`}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowCategoryDropdown(!showCategoryDropdown);\n                  }}\n                  title=\"Click to change category\"\n                >\n                  <span className=\"font-medium mr-1 text-gray-500\">Category:</span>\n                  <span className={`mr-1 px-1.5 py-0.5 rounded ${categoryInfo.color}`}>{categoryInfo.display_name}</span>\n                  <span className=\"border-l border-gray-300 pl-1 flex items-center text-gray-500 bg-gray-50 -mr-2 -my-1 py-1 px-1 rounded-r-md\">\n                    <span className=\"text-xs mr-1 font-medium\">Select</span>\n                    <svg \n                      xmlns=\"http://www.w3.org/2000/svg\" \n                      className={`h-4 w-4 transition-transform ${showCategoryDropdown ? 'rotate-180' : ''} ${\n                        showArrowAnimation ? 'animate-bounce' : ''\n                      }`} \n                      viewBox=\"0 0 24 24\" \n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      strokeWidth=\"2\" \n                      strokeLinecap=\"round\" \n                      strokeLinejoin=\"round\"\n                    >\n                      <polyline points=\"6 9 12 15 18 9\"></polyline>\n                    </svg>\n                  </span>\n                </div>\n                \n                {/* Dropdown menu */}\n                {showCategoryDropdown && (\n                  <div \n                    className=\"fixed inset-0 z-10\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      setShowCategoryDropdown(false);\n                    }}\n                  >\n                    <div \n                      style={{\n                        position: 'absolute',\n                        top: `${dropdownPosition.top}px`,\n                        left: `${dropdownPosition.left}px`,\n                      }}\n                      className=\"mt-1 w-48 bg-white rounded-md shadow-lg z-20 border border-gray-200 overflow-hidden\"\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      <div className=\"py-1 max-h-60 overflow-y-auto\">\n                        <div className=\"px-4 py-2 text-xs font-medium text-gray-500 border-b border-gray-100 bg-gray-50\">\n                          Change category\n                        </div>\n                        {updating && (\n                          <div className=\"px-4 py-2 text-xs text-gray-500 flex items-center justify-center\">\n                            <svg className=\"animate-spin h-3 w-3 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                            Updating...\n                          </div>\n                        )}\n                        {categories\n                          .slice() // Create a copy to avoid mutating the original array\n                          .sort((a, b) => a.priority - b.priority) // Sort by priority\n                          .map((category) => {\n                          const isSelected = email.category?.toLowerCase() === category.name.toLowerCase();\n                          return (\n                            <button\n                              key={category.name}\n                              className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-50 flex items-center justify-between ${\n                                isSelected ? 'bg-gray-50 font-medium' : ''\n                              }`}\n                              onClick={(e) => {\n                                handleCategoryChange(e, category.name.toLowerCase());\n                                setShowCategoryDropdown(false);\n                              }}\n                              disabled={updating}\n                            >\n                              <span>{category.display_name}</span>\n                              {isSelected && (\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                              )}\n                            </button>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n              \n              {/* Regular labels */}\n              <div className=\"flex flex-wrap gap-1\">\n                {mapLabelsToComponents(filteredLabels, { variant: 'compact', showPrefix: false })}\n              </div>\n            </div>\n            \n            {/* Email actions */}\n            <div className=\"ml-auto flex gap-1\">\n              {!isDeleted && !email.labels.includes('TRASH') && (\n                <>\n                  {email.is_read ? (\n                    <button\n                      onClick={handleMarkAsUnread}\n                      className=\"p-1 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded\"\n                      title=\"Mark as unread\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                      </svg>\n                    </button>\n                  ) : (\n                    <button\n                      onClick={handleMarkAsRead}\n                      className=\"p-1 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded\"\n                      title=\"Mark as read\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 19v-8.93a2 2 0 01.89-1.664l7-4.666a2 2 0 012.22 0l7 4.666A2 2 0 0121 10.07V19M3 19a2 2 0 002 2h14a2 2 0 002-2M3 19l6.75-4.5M21 19l-6.75-4.5M3 10l6.75 4.5M21 10l-6.75 4.5m0 0l-1.14.76a2 2 0 01-2.22 0l-1.14-.76\" />\n                      </svg>\n                    </button>\n                  )}\n                \n                  <button\n                    onClick={handleArchive}\n                    className=\"p-1 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded\"\n                    title=\"Archive\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8\" />\n                    </svg>\n                  </button>\n                  \n                  <button\n                    onClick={handleTrash}\n                    className=\"p-1 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded\"\n                    title=\"Move to trash\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  \n  // If there's a click handler, don't wrap with Link\n  if (onClick) {\n    return emailContent;\n  }\n  \n  // Otherwise, wrap with Link for navigation\n  return (\n    <Link href={`/emails/${email.id}`} className=\"block\">\n      {emailContent}\n    </Link>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAEA,0EAA0E;AAC1E,SAAS,uBAAuB,MAAgB;IAC9C,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG,OAAO;IAE3C,6BAA6B;IAC7B,MAAM,iBAAiB;QACrB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,yCAAyC;IACzC,KAAK,MAAM,iBAAiB,eAAgB;QAC1C,IAAI,OAAO,QAAQ,CAAC,gBAAgB;YAClC,OAAO;QACT;IACF;IAEA,+CAA+C;IAC/C,IAAI,OAAO,QAAQ,CAAC,UAAU;QAC5B,OAAO;IACT;IAEA,OAAO;AACT;AAEA,4BAA4B;AAC5B,SAAS,uBAAuB,QAAgB;IAC9C,0EAA0E;IAC1E,yFAAyF;IAEzF,wFAAwF;IACxF,MAAM,qBAA0G;QAC9G,qBAAqB;YAAE,cAAc;YAAY,OAAO;YAA0D,aAAa;QAAK;QACpI,oBAAoB;YAAE,cAAc;YAAW,OAAO;YAA0D,aAAa;QAAK;QAClI,mBAAmB;YAAE,cAAc;YAAU,OAAO;YAAuD,aAAa;QAAK;QAC7H,uBAAuB;YAAE,cAAc;YAAc,OAAO;YAA0D,aAAa;QAAK;QACxI,mBAAmB;YAAE,cAAc;YAAU,OAAO;YAAoD,aAAa;QAAK;QAC1H,WAAW;YAAE,cAAc;YAAW,OAAO;YAAoD,aAAa;QAAK;IACrH;IAEA,OAAO,kBAAkB,CAAC,SAAS,IAAI;AACzC;AAEA,qDAAqD;AACrD,SAAS,eAAe,MAAgB;IACtC,MAAM,aAAa,OAAO,MAAM,CAAC,CAAA,QAAS,MAAM,UAAU,CAAC,gBAAgB,UAAU;IACrF,MAAM,gBAAgB,OAAO,MAAM,CAAC,CAAA,QAClC,CAAC,MAAM,UAAU,CAAC,gBAClB,CAAC,MAAM,UAAU,CAAC,UAClB,UAAU,aACV,CAAC;YAAC;YAAQ;SAAQ,CAAC,QAAQ,CAAC;IAG9B,OAAO;QAAE;QAAY;IAAc;AACrC;AASO,SAAS,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,KAAK,EAAE,eAAe,EAAkB;;IAC9F,2BAA2B;IAC3B,MAAM,EAAE,eAAe,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,qBAAkB,AAAD;IACzD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAChD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,KAAK;QAAG,MAAM;IAAE;IAC3E,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,8CAA8C;IAC9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,QAAQ;6CAAW;oBACvB,sBAAsB;gBACxB;4CAAG;YAEH;uCAAO,IAAM,aAAa;;QAC5B;8BAAG,EAAE;IAEL,2CAA2C;IAC3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,wBAAwB,iBAAiB,OAAO,EAAE;gBACpD,MAAM,OAAO,iBAAiB,OAAO,CAAC,qBAAqB;gBAC3D,oBAAoB;oBAClB,KAAK,KAAK,MAAM,GAAG,OAAO,OAAO;oBACjC,MAAM,KAAK,IAAI,GAAG,OAAO,OAAO;gBAClC;YACF;QACF;8BAAG;QAAC;KAAqB;IAEzB,2BAA2B;IAC3B,MAAM,iBAAiB,6JAAA,CAAA,UAAK,CAAC,OAAO;6CAAC;YACnC,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM,MAAM,CAAC,MAAM,KAAK,GAAG,OAAO,EAAE;YAEzD,kFAAkF;YAClF,MAAM,eAAe;gBAAC;gBAAyB;gBAAQ;aAAQ;YAC/D,MAAM,gBAAgB,MAAM,MAAM,CAAC,MAAM;mEAAC,CAAA,QACxC,CAAC,aAAa,QAAQ,CAAC,UACvB,CAAC,MAAM,UAAU,CAAC;;YAGpB,2DAA2D;YAC3D,IAAI,cAAc,QAAQ,CAAC,UAAU;gBACnC,OAAO,cAAc,MAAM;yDAAC,CAAA,QAAS,UAAU;;YACjD;YAEA,OAAO;QACT;4CAAG;QAAC,MAAM,MAAM;KAAC;IAEjB,4BAA4B;IAC5B,MAAM,eAAe,6JAAA,CAAA,UAAK,CAAC,OAAO;2CAAC;YACjC,yEAAyE;YACzE,IAAI,MAAM,MAAM,IAAI,MAAM,MAAM,CAAC,QAAQ,CAAC,UAAU;gBAClD,OAAO,gBAAgB,YAAY;oBAAE,cAAc;oBAAS,OAAO;oBAA0B,aAAa;gBAAK;YACjH;YAEA,uDAAuD;YACvD,IAAI,MAAM,QAAQ,EAAE;gBAClB,MAAM,OAAO,gBAAgB,MAAM,QAAQ;gBAC3C,IAAI,MAAM,OAAO;YACnB;YAEA,wFAAwF;YACxF,IAAI,MAAM,MAAM,EAAE;gBAChB,MAAM,gBAAgB,MAAM,MAAM,CAAC,IAAI;qEAAC,CAAA,QAAS,MAAM,UAAU,CAAC,gBAAgB,UAAU;;gBAC5F,IAAI,eAAe;oBACjB,MAAM,OAAO,gBAAgB;oBAC7B,IAAI,MAAM,OAAO;gBACnB;YACF;YAEA,mBAAmB;YACnB,OAAO,gBAAgB,cAAc;gBAAE,cAAc;gBAAW,OAAO;gBAA4B,aAAa;YAAK;QACvH;0CAAG;QAAC,MAAM,QAAQ;QAAE,MAAM,MAAM;QAAE;KAAgB;IAElD,wBAAwB;IACxB,MAAM,gBAAgB,OAAO;QAC3B,EAAE,cAAc;QAChB,EAAE,eAAe;QAEjB,IAAI;YACF,MAAM,UAAU,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;YAEjC,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EAAE,MAAM,EAAE;YAE5C,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAEd,IAAI,SAAS,MAAM,KAAK,WAAW;gBACjC,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,OAAO,IAAI;gBAErC,0CAA0C;gBAC1C,MAAM,eAAe;oBACnB,GAAG,KAAK;oBACR,QAAQ,SAAS,MAAM,IAAI,MAAM,MAAM;oBACvC,+CAA+C;oBAC/C,UAAU,SAAS,QAAQ,IAAI,MAAM,QAAQ;gBAC/C;gBAEA,sDAAsD;gBACtD,IAAI,iBAAiB;oBACnB,gBAAgB;gBAClB;YACF,OAAO;gBACL,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,OAAO,IAAI;YACrC;QACF,EAAE,OAAO,OAAO;YACd,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD;YACf,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YACf,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;IACF;IAEA,sBAAsB;IACtB,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAChB,EAAE,eAAe;QAEjB,IAAI;YACF,MAAM,UAAU,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;YAEjC,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,cAAW,AAAD,EAAE,MAAM,EAAE;YAE3C,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAEd,IAAI,SAAS,MAAM,KAAK,WAAW;gBACjC,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,OAAO,IAAI;gBAErC,uDAAuD;gBACvD,MAAM,eAAe;oBACnB,GAAG,KAAK;oBACR,UAAU;oBACV,QAAQ;2BAAI,CAAC,MAAM,MAAM,IAAI,EAAE,EAAE,MAAM,CAAC,CAAA,QAAS,UAAU;wBAAU;qBAAQ;gBAC/E;gBAEA,sDAAsD;gBACtD,IAAI,iBAAiB;oBACnB,gBAAgB;gBAClB;YACF,OAAO;gBACL,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,OAAO,IAAI;YACrC;QACF,EAAE,OAAO,OAAO;YACd,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD;YACf,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YACf,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,6BAA6B;IAC7B,MAAM,mBAAmB,OAAO;QAC9B,EAAE,cAAc;QAChB,EAAE,eAAe;QAEjB,uBAAuB;QACvB,IAAI,MAAM,OAAO,EAAE;YACjB;QACF;QAEA,IAAI;YACF,MAAM,UAAU,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;YAEjC,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,oBAAiB,AAAD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE;gBAAC;aAAS;YAEjE,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAEd,IAAI,SAAS,MAAM,KAAK,WAAW;gBACjC,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;gBAEjB,+CAA+C;gBAC/C,MAAM,eAAe;oBACnB,GAAG,KAAK;oBACR,SAAS;oBACT,QAAQ,SAAS,MAAM,IAAI,MAAM,MAAM;gBACzC;gBAEA,sDAAsD;gBACtD,IAAI,iBAAiB;oBACnB,gBAAgB;gBAClB;YACF,OAAO;gBACL,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,OAAO,IAAI;YACrC;QACF,EAAE,OAAO,OAAO;YACd,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD;YACf,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YACf,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,+BAA+B;IAC/B,MAAM,qBAAqB,OAAO;QAChC,EAAE,cAAc;QAChB,EAAE,eAAe;QAEjB,yBAAyB;QACzB,IAAI,CAAC,MAAM,OAAO,EAAE;YAClB;QACF;QAEA,IAAI;YACF,MAAM,UAAU,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;YAEjC,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,oBAAiB,AAAD,EAAE,MAAM,EAAE,EAAE;gBAAC;aAAS,EAAE,EAAE;YAEjE,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAEd,IAAI,SAAS,MAAM,KAAK,WAAW;gBACjC,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;gBAEjB,+CAA+C;gBAC/C,MAAM,eAAe;oBACnB,GAAG,KAAK;oBACR,SAAS;oBACT,QAAQ,SAAS,MAAM,IAAI,MAAM,MAAM;gBACzC;gBAEA,sDAAsD;gBACtD,IAAI,iBAAiB;oBACnB,gBAAgB;gBAClB;YACF,OAAO;gBACL,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,OAAO,IAAI;YACrC;QACF,EAAE,OAAO,OAAO;YACd,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD;YACf,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YACf,QAAQ,KAAK,CAAC,kCAAkC;QAClD;IACF;IAEA,yBAAyB;IACzB,MAAM,uBAAuB,OAAO,GAAkC;QACpE,EAAE,cAAc;QAChB,EAAE,eAAe;QAEjB,mCAAmC;QACnC,IAAI,MAAM,QAAQ,EAAE,kBAAkB,YAAY,WAAW,IAAI;YAC/D;QACF;QAEA,IAAI;YACF,YAAY;YACZ,MAAM,UAAU,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;YAEjC,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,sBAAmB,AAAD,EAAE,MAAM,EAAE,EAAE,YAAY,WAAW;YAE5E,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAEd,IAAI,SAAS,MAAM,KAAK,WAAW;gBACjC,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;gBAEjB,uDAAuD;gBACvD,MAAM,eAAe;oBACnB,GAAG,KAAK;oBACR,UAAU,SAAS,QAAQ;oBAC3B,QAAQ,SAAS,MAAM;gBACzB;gBAEA,sDAAsD;gBACtD,IAAI,iBAAiB;oBACnB,gBAAgB;gBAClB;YACF,OAAO;gBACL,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,OAAO,IAAI;YACrC;QACF,EAAE,OAAO,OAAO;YACd,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD;YACf,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YACf,QAAQ,KAAK,CAAC,4BAA4B;QAC5C,SAAU;YACR,YAAY;QACd;IACF;IAEA,gCAAgC;IAChC,MAAM,6BACJ,6LAAC;QACC,WAAW,CAAC,4EAA4E,EAAE,CAAC,MAAM,OAAO,GAAG,gBAAgB,IAAI;QAC/H,SAAS;kBAET,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;8BACZ,CAAC,MAAM,OAAO,kBACb,6LAAC;wBAAI,WAAU;wBAAmC,OAAM;;;;;;;;;;;8BAI5D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACZ,MAAM,UAAU;;;;;;8CAEnB,6LAAC;oCAAI,WAAU;8CACZ,CAAA,GAAA,gIAAA,CAAA,qBAAkB,AAAD,EAAE,IAAI,KAAK,MAAM,WAAW;;;;;;;;;;;;sCAIlD,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACZ,MAAM,OAAO,IAAI;;;;;;;;;;;sCAItB,6LAAC;4BAAI,WAAU;sCACZ,MAAM,OAAO;;;;;;sCAGhB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDAEb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDACC,KAAK;oDACL,WAAW,CAAC,gKAAgK,EAAE,uBAAuB,yCAAyC,IAAI;oDAClP,SAAS,CAAC;wDACR,EAAE,eAAe;wDACjB,wBAAwB,CAAC;oDAC3B;oDACA,OAAM;;sEAEN,6LAAC;4DAAK,WAAU;sEAAiC;;;;;;sEACjD,6LAAC;4DAAK,WAAW,CAAC,2BAA2B,EAAE,aAAa,KAAK,EAAE;sEAAG,aAAa,YAAY;;;;;;sEAC/F,6LAAC;4DAAK,WAAU;;8EACd,6LAAC;oEAAK,WAAU;8EAA2B;;;;;;8EAC3C,6LAAC;oEACC,OAAM;oEACN,WAAW,CAAC,6BAA6B,EAAE,uBAAuB,eAAe,GAAG,CAAC,EACnF,qBAAqB,mBAAmB,IACxC;oEACF,SAAQ;oEACR,MAAK;oEACL,QAAO;oEACP,aAAY;oEACZ,eAAc;oEACd,gBAAe;8EAEf,cAAA,6LAAC;wEAAS,QAAO;;;;;;;;;;;;;;;;;;;;;;;gDAMtB,sCACC,6LAAC;oDACC,WAAU;oDACV,SAAS,CAAC;wDACR,EAAE,eAAe;wDACjB,wBAAwB;oDAC1B;8DAEA,cAAA,6LAAC;wDACC,OAAO;4DACL,UAAU;4DACV,KAAK,GAAG,iBAAiB,GAAG,CAAC,EAAE,CAAC;4DAChC,MAAM,GAAG,iBAAiB,IAAI,CAAC,EAAE,CAAC;wDACpC;wDACA,WAAU;wDACV,SAAS,CAAC,IAAM,EAAE,eAAe;kEAEjC,cAAA,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;8EAAkF;;;;;;gEAGhG,0BACC,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAI,WAAU;4EAA4B,OAAM;4EAA6B,MAAK;4EAAO,SAAQ;;8FAChG,6LAAC;oFAAO,WAAU;oFAAa,IAAG;oFAAK,IAAG;oFAAK,GAAE;oFAAK,QAAO;oFAAe,aAAY;;;;;;8FACxF,6LAAC;oFAAK,WAAU;oFAAa,MAAK;oFAAe,GAAE;;;;;;;;;;;;wEAC/C;;;;;;;gEAIT,WACE,KAAK,GAAG,qDAAqD;iEAC7D,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,QAAQ,GAAG,EAAE,QAAQ,EAAE,mBAAmB;iEAC3D,GAAG,CAAC,CAAC;oEACN,MAAM,aAAa,MAAM,QAAQ,EAAE,kBAAkB,SAAS,IAAI,CAAC,WAAW;oEAC9E,qBACE,6LAAC;wEAEC,WAAW,CAAC,sFAAsF,EAChG,aAAa,2BAA2B,IACxC;wEACF,SAAS,CAAC;4EACR,qBAAqB,GAAG,SAAS,IAAI,CAAC,WAAW;4EACjD,wBAAwB;wEAC1B;wEACA,UAAU;;0FAEV,6LAAC;0FAAM,SAAS,YAAY;;;;;;4EAC3B,4BACC,6LAAC;gFAAI,OAAM;gFAA6B,WAAU;gFAAwB,MAAK;gFAAO,SAAQ;gFAAY,QAAO;0FAC/G,cAAA,6LAAC;oFAAK,eAAc;oFAAQ,gBAAe;oFAAQ,aAAa;oFAAG,GAAE;;;;;;;;;;;;uEAbpE,SAAS,IAAI;;;;;gEAkBxB;;;;;;;;;;;;;;;;;;;;;;;sDAQV,6LAAC;4CAAI,WAAU;sDACZ,CAAA,GAAA,6IAAA,CAAA,wBAAqB,AAAD,EAAE,gBAAgB;gDAAE,SAAS;gDAAW,YAAY;4CAAM;;;;;;;;;;;;8CAKnF,6LAAC;oCAAI,WAAU;8CACZ,CAAC,aAAa,CAAC,MAAM,MAAM,CAAC,QAAQ,CAAC,0BACpC;;4CACG,MAAM,OAAO,iBACZ,6LAAC;gDACC,SAAS;gDACT,WAAU;gDACV,OAAM;0DAEN,cAAA,6LAAC;oDAAI,OAAM;oDAA6B,WAAU;oDAAU,MAAK;oDAAO,SAAQ;oDAAY,QAAO;8DACjG,cAAA,6LAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;qEAIzE,6LAAC;gDACC,SAAS;gDACT,WAAU;gDACV,OAAM;0DAEN,cAAA,6LAAC;oDAAI,OAAM;oDAA6B,WAAU;oDAAU,MAAK;oDAAO,SAAQ;oDAAY,QAAO;8DACjG,cAAA,6LAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;;0DAK3E,6LAAC;gDACC,SAAS;gDACT,WAAU;gDACV,OAAM;0DAEN,cAAA,6LAAC;oDAAI,OAAM;oDAA6B,WAAU;oDAAU,MAAK;oDAAO,SAAQ;oDAAY,QAAO;8DACjG,cAAA,6LAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;;0DAIzE,6LAAC;gDACC,SAAS;gDACT,WAAU;gDACV,OAAM;0DAEN,cAAA,6LAAC;oDAAI,OAAM;oDAA6B,WAAU;oDAAU,MAAK;oDAAO,SAAQ;oDAAY,QAAO;8DACjG,cAAA,6LAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYzF,mDAAmD;IACnD,IAAI,SAAS;QACX,OAAO;IACT;IAEA,2CAA2C;IAC3C,qBACE,6LAAC,+JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE;QAAE,WAAU;kBAC1C;;;;;;AAGP;GA/dgB;;QAE0B,qIAAA,CAAA,qBAAkB;;;KAF5C"}},
    {"offset": {"line": 1181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1187, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/app/emails/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef, useCallback } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { getEmails, type Email, type EmailsParams } from '@/lib/api';\nimport { isAuthenticated, handleAuthError } from '@/lib/auth';\nimport { SearchInput } from '@/components/ui/search-input';\nimport { EmailCard } from '@/components/ui/email-card';\nimport { EMAIL_SYNC_COMPLETED_EVENT } from '@/components/layout/main-layout';\nimport { toast, Toaster } from 'react-hot-toast';\n\n// Add the API function to fix trash consistency\nconst fixTrashConsistency = async () => {\n    try {\n        // Get the authentication token from localStorage\n        const token = localStorage.getItem('token');\n        if (!token) {\n            console.error('Authentication token not found');\n            throw new Error('Authentication token not found');\n        }\n        \n        // Get the API URL from environment variables\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n        console.log(`Making API request to ${apiUrl}/emails/fix-trash-consistency`);\n        \n        // Make the request to fix trash consistency\n        const response = await fetch(`${apiUrl}/emails/fix-trash-consistency`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            },\n        });\n        \n        // Check if the response is ok\n        if (!response.ok) {\n            // Try to get error details from response\n            const errorData = await response.json().catch(() => null);\n            const errorMessage = errorData?.detail || `API error: ${response.status} ${response.statusText}`;\n            console.error('Error response:', errorMessage);\n            throw new Error(errorMessage);\n        }\n        \n        // Parse the response\n        const data = await response.json();\n        console.log('Fix trash consistency response:', data);\n        return data;\n    } catch (error) {\n        console.error('Error fixing trash consistency:', error);\n        throw error;\n    }\n};\n\nexport default function EmailsPage() {\n    const router = useRouter();\n    const searchParams = useSearchParams();\n    const [emails, setEmails] = useState<Email[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [hasMore, setHasMore] = useState(true);\n    const [page, setPage] = useState(1);\n    const [totalEmails, setTotalEmails] = useState(0);\n    const [initialLoadComplete, setInitialLoadComplete] = useState(false);\n    const [loadingMore, setLoadingMore] = useState(false);\n    const [scrollRestored, setScrollRestored] = useState(false);\n    const [isFixingTrash, setIsFixingTrash] = useState(false);\n    const [showTrashNotification, setShowTrashNotification] = useState(true);\n    \n    // Get category from URL parameters\n    const categoryParam = searchParams?.get('category') ?? null;\n    // Get status from URL parameters\n    const statusParam = searchParams?.get('status') ?? null;\n    // Get label from URL parameters\n    const labelParam = searchParams?.get('label') ?? null;\n    // Get view from URL parameters (for inbox view)\n    const viewParam = searchParams?.get('view') ?? null;\n    \n    // Create a ref for the observer target element\n    const observerTarget = useRef<HTMLDivElement>(null);\n\n    // Function to fetch emails with pagination\n    const fetchEmails = useCallback(async (pageNum: number, isInitialLoad: boolean = false) => {\n        try {\n            if (!isAuthenticated()) {\n                console.log('User not authenticated, redirecting to authentication');\n                handleAuthError();\n                return;\n            }\n\n            if (isInitialLoad) {\n                setLoading(true);\n            } else {\n                setLoadingMore(true);\n            }\n            \n            console.log(`Fetching emails for page ${pageNum}...`);\n            \n            const params: EmailsParams = {\n                page: pageNum,\n                limit: 20,\n            };\n            \n            // If no specific filters are applied and not in inbox view, show all emails EXCEPT trash\n            const isAllEmailsView = !categoryParam && !statusParam && !labelParam && !viewParam;\n            \n            // Handle inbox view - exclude archived and trash emails\n            if (viewParam === 'inbox') {\n                // Add INBOX label filter to only show emails in the inbox\n                params.label = 'INBOX';\n                console.log('Inbox view: Showing only emails with INBOX label');\n            }\n            \n            if (isAllEmailsView) {\n                // Instead of setting showAll=true which includes trash,\n                // we don't set any parameter which will use the backend's default\n                // behavior of excluding trash emails\n            }\n            \n            if (categoryParam) {\n                params.category = categoryParam;\n                \n                // Set showAll to true for trash view and also when we SPECIFICALLY\n                // need to get emails with the trash category\n                if (categoryParam.toLowerCase() === 'trash') {\n                    params.showAll = true;\n                    \n                    // We also need to add a parameter to ensure we're getting emails\n                    // with either the trash category OR the TRASH label\n                    params.label = 'TRASH';\n                }\n            }\n\n            if (statusParam) {\n                if (statusParam === 'read' || statusParam === 'unread') {\n                    // Convert status string to boolean read_status\n                    params.read_status = statusParam === 'read';\n                }\n            }\n            \n            if (labelParam && categoryParam !== 'trash') {\n                params.label = labelParam;\n            }\n            \n            const response = await getEmails(params);\n            console.log('Emails fetched successfully:', response.emails.length, 'emails');\n            \n            if (isInitialLoad) {\n                setEmails(response.emails);\n            } else {\n                setEmails(prev => [...prev, ...response.emails]);\n            }\n            \n            setTotalEmails(response.pagination.total);\n            setHasMore(response.pagination.has_next);\n            setError(null);\n            \n            if (isInitialLoad) {\n                setInitialLoadComplete(true);\n            }\n        } catch (error) {\n            console.error('Error fetching emails:', error);\n            \n            // Check if it's an authentication error\n            const errorMessage = error instanceof Error ? error.message : 'Error fetching emails';\n            if (errorMessage.includes('Authentication failed') || \n                errorMessage.includes('token') || \n                errorMessage.includes('401')) {\n                handleAuthError();\n                return;\n            }\n            \n            setError(errorMessage);\n        } finally {\n            setLoading(false);\n            setLoadingMore(false);\n        }\n    }, [categoryParam, statusParam, labelParam, router, viewParam]);\n\n    // Initial data load\n    useEffect(() => {\n        setPage(1);\n        setEmails([]);\n        setHasMore(true);\n        setInitialLoadComplete(false);\n        fetchEmails(1, true);\n    }, [fetchEmails, categoryParam, statusParam, labelParam, viewParam]);\n\n    // Listen for email sync completion event\n    useEffect(() => {\n        const handleSyncCompleted = () => {\n            console.log('Email sync completed, refreshing email list');\n            // Reset pagination and reload emails\n            setPage(1);\n            setEmails([]);\n            setHasMore(true);\n            setInitialLoadComplete(false);\n            fetchEmails(1, true);\n        };\n\n        // Add event listener\n        window.addEventListener(EMAIL_SYNC_COMPLETED_EVENT, handleSyncCompleted);\n\n        // Clean up\n        return () => {\n            window.removeEventListener(EMAIL_SYNC_COMPLETED_EVENT, handleSyncCompleted);\n        };\n    }, [fetchEmails]);\n\n    // Set up intersection observer for infinite scrolling\n    useEffect(() => {\n        if (!initialLoadComplete || !hasMore || loadingMore) return;\n        \n        const observer = new IntersectionObserver(\n            entries => {\n                if (entries[0].isIntersecting && hasMore && !loadingMore) {\n                    const nextPage = page + 1;\n                    setPage(nextPage);\n                    fetchEmails(nextPage);\n                }\n            },\n            { threshold: 0.5 }\n        );\n        \n        if (observerTarget.current) {\n            observer.observe(observerTarget.current);\n        }\n        \n        return () => {\n            if (observerTarget.current) {\n                observer.unobserve(observerTarget.current);\n            }\n        };\n    }, [initialLoadComplete, hasMore, loadingMore, page, fetchEmails]);\n\n    // Add a handler for labels updated\n    const handleLabelsUpdated = (updatedEmail: Email) => {\n        // Check if the email should be removed from the current view based on category/status filter\n        const shouldRemoveFromCurrentView = (\n            // If we're viewing a specific category and the email category has changed\n            (categoryParam && updatedEmail.category !== categoryParam) ||\n            // If we're viewing archived emails and the email is no longer archived\n            (categoryParam === 'archive' && updatedEmail.labels.includes('INBOX')) ||\n            // If we're viewing by label and the email no longer has that label\n            (labelParam && !updatedEmail.labels.includes(labelParam)) ||\n            // If we're not viewing trash but the email has been moved to trash\n            (categoryParam !== 'trash' && updatedEmail.labels.includes('TRASH'))\n        );\n\n        // Special case: If the email has been moved to trash and we're not in trash view,\n        // remove it from the current view\n        if (updatedEmail.labels.includes('TRASH') && categoryParam !== 'trash') {\n            setEmails(prevEmails => prevEmails.filter(email => email.id !== updatedEmail.id));\n            setTotalEmails(prev => Math.max(0, prev - 1));\n            return;\n        }\n\n        if (shouldRemoveFromCurrentView) {\n            // Remove the email from the current view\n            setEmails(prevEmails => prevEmails.filter(email => email.id !== updatedEmail.id));\n            // Update total count\n            setTotalEmails(prev => Math.max(0, prev - 1));\n        } else {\n            // Update the email in the list\n            setEmails(prevEmails => \n                prevEmails.map(email => \n                    email.id === updatedEmail.id ? updatedEmail : email\n                )\n            );\n        }\n    };\n\n    // Save scroll position when navigating away\n    const saveScrollPosition = useCallback(() => {\n        const scrollY = window.scrollY;\n        sessionStorage.setItem('emailListScrollPosition', scrollY.toString());\n        console.log('Saved scroll position:', scrollY);\n    }, []);\n    \n    // Restore scroll position\n    const restoreScrollPosition = useCallback(() => {\n        const savedPosition = sessionStorage.getItem('emailListScrollPosition');\n        if (savedPosition && !scrollRestored) {\n            const position = parseInt(savedPosition, 10);\n            console.log('Restoring scroll position to:', position);\n            window.scrollTo(0, position);\n            setScrollRestored(true);\n        }\n    }, [scrollRestored]);\n\n    // Effect to restore scroll position when returning to this page\n    useEffect(() => {\n        if (initialLoadComplete && !scrollRestored) {\n            restoreScrollPosition();\n        }\n    }, [initialLoadComplete, restoreScrollPosition, scrollRestored]);\n    \n    // Set up event handlers for saving scroll position on navigation\n    useEffect(() => {\n        // Add click event listener to email cards to save position\n        const handleEmailCardClick = () => {\n            saveScrollPosition();\n        };\n        \n        // Find all email card links and attach event listeners\n        const emailCards = document.querySelectorAll('[data-email-card]');\n        emailCards.forEach(card => {\n            card.addEventListener('click', handleEmailCardClick);\n        });\n        \n        return () => {\n            // Clean up event listeners\n            emailCards.forEach(card => {\n                card.removeEventListener('click', handleEmailCardClick);\n            });\n        };\n    }, [emails, saveScrollPosition]);\n\n    // Handle the trash consistency fix\n    const handleFixTrashConsistency = async () => {\n        if (isFixingTrash) return;\n        \n        try {\n            setIsFixingTrash(true);\n            const toastId = toast.loading('Fixing trash inconsistencies...');\n            \n            const result = await fixTrashConsistency();\n            \n            toast.dismiss(toastId);\n            \n            if (result.fixed_count > 0) {\n                toast.success(`Fixed ${result.fixed_count} emails with trash inconsistencies. Refreshing...`);\n                \n                // Reset pagination and reload emails\n                setPage(1);\n                setEmails([]);\n                setHasMore(true);\n                setInitialLoadComplete(false);\n                fetchEmails(1, true);\n            } else {\n                toast.success('No inconsistencies found. All emails are correctly labeled.');\n            }\n        } catch (error) {\n            toast.error(`Error fixing trash inconsistencies: ${error instanceof Error ? error.message : 'Unknown error'}`);\n            console.error('Failed to fix trash inconsistencies:', error);\n        } finally {\n            setIsFixingTrash(false);\n        }\n    };\n\n    // Effect to show notification in trash view\n    useEffect(() => {\n        if (categoryParam?.toLowerCase() === 'trash') {\n            setShowTrashNotification(true);\n        } else {\n            setShowTrashNotification(false);\n        }\n    }, [categoryParam]);\n\n    if (loading) {\n        return (\n            <div className=\"flex items-center justify-center h-screen\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"flex items-center justify-center h-screen\">\n                <div className=\"bg-white rounded-2xl shadow-lg p-8 max-w-md w-full mx-4\">\n                    <div className=\"text-center\">\n                        <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Error Loading Emails</h2>\n                        <p className=\"text-gray-600\">{error}</p>\n                        <button\n                            onClick={() => window.location.reload()}\n                            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-500\"\n                        >\n                            Try Again\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n    const filteredEmails = emails.filter(email => {\n        const matchesSearch = !searchTerm || \n            email.subject?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            email.from_email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            email.snippet.toLowerCase().includes(searchTerm.toLowerCase());\n        return matchesSearch;\n    });\n\n    // Determine the title based on category, status, or view parameters\n    let pageTitle = 'All Emails';\n    if (viewParam === 'inbox') {\n        pageTitle = 'Inbox';\n    } else if (categoryParam) {\n        pageTitle = `${categoryParam.charAt(0).toUpperCase() + categoryParam.slice(1)} Emails`;\n    } else if (statusParam) {\n        pageTitle = `${statusParam.charAt(0).toUpperCase() + statusParam.slice(1)} Emails`;\n    }\n\n    return (\n        <div className=\"px-4 py-8\">\n            <Toaster position=\"top-right\" toastOptions={{ duration: 6000 }} />\n            <div className=\"w-full max-w-3xl mx-auto sm:px-2 md:px-4\">\n                {/* Show prominent notification in trash view */}\n                {categoryParam?.toLowerCase() === 'trash' && showTrashNotification && (\n                    <div className=\"mb-4 p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n                        <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-orange-500 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                    <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                                </svg>\n                                <div>\n                                    <p className=\"text-sm text-orange-800 font-medium\">\n                                        Some emails may not appear in this Trash view due to inconsistent labeling.\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"flex space-x-2\">\n                                <button\n                                    onClick={handleFixTrashConsistency}\n                                    disabled={isFixingTrash}\n                                    className=\"px-3 py-1 bg-orange-500 text-white text-sm font-medium rounded hover:bg-orange-600 transition-colors\"\n                                >\n                                    {isFixingTrash ? 'Fixing...' : 'Fix Now'}\n                                </button>\n                                <button\n                                    onClick={() => setShowTrashNotification(false)}\n                                    className=\"text-orange-500 hover:text-orange-700\"\n                                >\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                        <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                \n                <div className=\"flex flex-col mb-6\">\n                    <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-4\">\n                        <h1 className=\"text-2xl font-bold text-gray-900 mb-4 lg:mb-0 flex-shrink-0\">\n                            {pageTitle}\n                            {totalEmails > 0 && <span className=\"text-gray-500 text-lg ml-2\">({totalEmails})</span>}\n                        </h1>\n                        \n                        {/* Add trash fix button prominently next to the title if in trash view */}\n                        {categoryParam?.toLowerCase() === 'trash' && (\n                            <button\n                                onClick={handleFixTrashConsistency}\n                                disabled={isFixingTrash}\n                                className={`px-4 py-2 text-sm bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors ${isFixingTrash ? 'opacity-50 cursor-not-allowed' : ''}`}\n                            >\n                                {isFixingTrash ? 'Fixing...' : 'Fix Trash Inconsistencies'}\n                            </button>\n                        )}\n                    </div>\n                    <div className=\"w-full\">\n                        <SearchInput \n                            value={searchTerm} \n                            onChange={setSearchTerm} \n                            placeholder=\"Search emails...\" \n                            className=\"w-full\"\n                        />\n                    </div>\n                </div>\n                \n                <p className=\"mt-1 text-sm text-gray-600 mb-4\">\n                    {totalEmails} {totalEmails === 1 ? 'email' : 'emails'} found\n                </p>\n\n                {/* Email list */}\n                <div>\n                    {filteredEmails.length === 0 ? (\n                        <div className=\"bg-white rounded-2xl shadow-md p-8 text-center\">\n                            <h3 className=\"text-lg font-medium text-gray-900\">No emails found</h3>\n                            <p className=\"mt-2 text-sm text-gray-500\">\n                                Try adjusting your search or filter to find what you're looking for.\n                            </p>\n                        </div>\n                    ) : (\n                        <>\n                            {filteredEmails.map((email) => (\n                                <EmailCard\n                                    key={email.id}\n                                    email={email}\n                                    onLabelsUpdated={handleLabelsUpdated}\n                                    onClick={() => {\n                                        saveScrollPosition();\n                                        router.push(`/emails/${email.id}`);\n                                    }}\n                                    data-email-card\n                                />\n                            ))}\n                            \n                            {/* Loading indicator for more emails */}\n                            {loadingMore && (\n                                <div className=\"flex justify-center py-4\">\n                                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                                </div>\n                            )}\n                            \n                            {/* Observer target element */}\n                            <div \n                                ref={observerTarget} \n                                className=\"h-10 w-full\"\n                                aria-hidden=\"true\"\n                            />\n                            \n                            {/* End of list message */}\n                            {!hasMore && emails.length > 0 && (\n                                <div className=\"text-center py-8 text-gray-500 text-sm\">\n                                    You've reached the end of the list\n                                </div>\n                            )}\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}