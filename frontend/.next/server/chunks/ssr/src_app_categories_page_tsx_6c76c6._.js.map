{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/app/categories/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { \n  getCategoriesApi, \n  initializeCategories, \n  addKeyword, \n  addSenderRule,\n  createCategory,\n  getCategoryKeywords,\n  getCategorySenderRules,\n  reprocessAllEmails,\n  deleteCategory,\n  trainTrashClassifier,\n  getTrashClassifierStatus,\n  bootstrapTrashClassifier,\n  evaluateTrashClassifier,\n  getClassifierMetrics,\n  type Category,\n  type CategoryKeyword,\n  type SenderRule,\n  type CreateCategoryRequest,\n  type ClassifierStatus,\n  type ModelMetrics\n} from '@/lib/api';\nimport { TrashIcon, BeakerIcon } from '@heroicons/react/24/outline';\nimport { EMAIL_SYNC_COMPLETED_EVENT } from '@/components/layout/main-layout';\n\n// New category form component \nfunction NewCategoryForm({ onAddSuccess }: { onAddSuccess: () => void }) {\n  const [name, setName] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState(50);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!name || !displayName) return;\n\n    setIsSubmitting(true);\n    setError(null);\n    \n    try {\n      const categoryData: CreateCategoryRequest = {\n        name,\n        display_name: displayName,\n        description: description || undefined,\n        priority\n      };\n      \n      await createCategory(categoryData);\n      \n      // Reset form\n      setName('');\n      setDisplayName('');\n      setDescription('');\n      setPriority(50);\n      \n      // Notify parent to refresh the list\n      onAddSuccess();\n    } catch (err) {\n      console.error('Error creating category:', err);\n      setError('Failed to create category. It may already exist or there was a server error.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow-md p-6 border border-gray-200\">\n      <h2 className=\"text-xl font-semibold mb-4\">Add New Category</h2>\n      \n      {error && (\n        <div className=\"mb-4 p-3 bg-red-50 text-red-700 border border-red-200 rounded\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n          Internal Name (lowercase, no spaces)\n        </label>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value.toLowerCase().replace(/\\s+/g, '_'))}\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          placeholder=\"e.g. work_emails\"\n          required\n        />\n      </div>\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n          Display Name\n        </label>\n        <input\n          type=\"text\"\n          value={displayName}\n          onChange={(e) => setDisplayName(e.target.value)}\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          placeholder=\"e.g. Work Emails\"\n          required\n        />\n      </div>\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n          Description\n        </label>\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          placeholder=\"Optional description\"\n          rows={3}\n        />\n      </div>\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n          Priority (lower number = higher priority)\n        </label>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"100\"\n          value={priority}\n          onChange={(e) => setPriority(parseInt(e.target.value))}\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        />\n      </div>\n      \n      <button\n        type=\"submit\"\n        disabled={isSubmitting || !name || !displayName}\n        className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2 px-4 rounded disabled:opacity-50\"\n      >\n        {isSubmitting ? 'Creating...' : 'Create Category'}\n      </button>\n    </form>\n  );\n}\n\n// ML Classifier Configuration Component\nfunction MLClassifierConfig({ \n  onTrain, \n  onBootstrap, \n  classifierStatus,\n  isTraining,\n  isBootstrapping \n}: { \n  onTrain: (testSize: number) => void,\n  onBootstrap: (testSize: number) => void,\n  classifierStatus: ClassifierStatus | null,\n  isTraining: boolean,\n  isBootstrapping: boolean\n}) {\n  const [testSize, setTestSize] = useState(0.2);\n\n  return (\n    <div className=\"bg-white rounded-lg p-4 border border-gray-200 mb-4\">\n      <h3 className=\"font-medium text-gray-800 mb-2\">Training Configuration</h3>\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Test Data Split\n        </label>\n        <div className=\"flex items-center\">\n          <input\n            type=\"range\"\n            min=\"0.1\"\n            max=\"0.4\"\n            step=\"0.05\"\n            value={testSize}\n            onChange={(e) => setTestSize(parseFloat(e.target.value))}\n            className=\"w-full mr-3\"\n          />\n          <span className=\"text-sm text-gray-600 w-16\">{Math.round(testSize * 100)}%</span>\n        </div>\n        <p className=\"text-xs text-gray-500 mt-1\">\n          Percentage of data reserved for testing model performance\n        </p>\n      </div>\n      \n      <div className=\"flex space-x-2\">\n        <button\n          onClick={() => onTrain(testSize)}\n          disabled={isTraining || (classifierStatus?.trash_events_count || 0) < 10}\n          className={`\n            py-2 px-4 rounded text-sm flex items-center\n            ${(classifierStatus?.trash_events_count || 0) >= 10 \n              ? 'bg-green-600 hover:bg-green-700 text-white' \n              : 'bg-gray-300 text-gray-700 cursor-not-allowed'}\n          `}\n        >\n          {isTraining ? (\n            <>\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Training...\n            </>\n          ) : 'Train Model'}\n        </button>\n        \n        <button\n          onClick={() => onBootstrap(testSize)}\n          disabled={isBootstrapping}\n          className=\"bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded text-sm flex items-center disabled:opacity-50\"\n        >\n          {isBootstrapping ? (\n            <>\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Processing...\n            </>\n          ) : 'Use Existing Trash'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\n// Model Metrics Component\nfunction ModelMetricsDisplay({ metrics }: { metrics: ModelMetrics | null }) {\n  if (!metrics) {\n    return (\n      <div className=\"bg-blue-50 p-4 rounded border border-blue-200 text-center\">\n        <p className=\"text-blue-700\">\n          No model metrics available. Train a model to see performance statistics.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4 border border-gray-200\">\n      <h3 className=\"text-lg font-semibold mb-3\">Model Performance Metrics</h3>\n      \n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-4\">\n        <div className=\"p-3 bg-indigo-50 rounded border border-indigo-100\">\n          <div className=\"text-xs text-indigo-600 font-medium\">Accuracy</div>\n          <div className=\"text-xl font-bold text-indigo-700\">{metrics.accuracy !== undefined ? `${(metrics.accuracy * 100).toFixed(1)}%` : 'N/A'}</div>\n        </div>\n        <div className=\"p-3 bg-green-50 rounded border border-green-100\">\n          <div className=\"text-xs text-green-600 font-medium\">Precision</div>\n          <div className=\"text-xl font-bold text-green-700\">{metrics.precision !== undefined ? `${(metrics.precision * 100).toFixed(1)}%` : 'N/A'}</div>\n        </div>\n        <div className=\"p-3 bg-blue-50 rounded border border-blue-100\">\n          <div className=\"text-xs text-blue-600 font-medium\">Recall</div>\n          <div className=\"text-xl font-bold text-blue-700\">{metrics.recall !== undefined ? `${(metrics.recall * 100).toFixed(1)}%` : 'N/A'}</div>\n        </div>\n        <div className=\"p-3 bg-purple-50 rounded border border-purple-100\">\n          <div className=\"text-xs text-purple-600 font-medium\">F1 Score</div>\n          <div className=\"text-xl font-bold text-purple-700\">{metrics.f1_score !== undefined ? `${(metrics.f1_score * 100).toFixed(1)}%` : 'N/A'}</div>\n        </div>\n      </div>\n      \n      <div className=\"mb-4\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Confusion Matrix</h4>\n        {metrics.confusion_matrix ? (\n          <div className=\"grid grid-cols-2 gap-2 max-w-xs\">\n            <div className=\"bg-green-100 p-2 rounded text-center border border-green-200\">\n              <div className=\"text-xs text-green-700\">True Positive</div>\n              <div className=\"font-bold\">{metrics.confusion_matrix.true_positives}</div>\n            </div>\n            <div className=\"bg-red-100 p-2 rounded text-center border border-red-200\">\n              <div className=\"text-xs text-red-700\">False Positive</div>\n              <div className=\"font-bold\">{metrics.confusion_matrix.false_positives}</div>\n            </div>\n            <div className=\"bg-red-100 p-2 rounded text-center border border-red-200\">\n              <div className=\"text-xs text-red-700\">False Negative</div>\n              <div className=\"font-bold\">{metrics.confusion_matrix.false_negatives}</div>\n            </div>\n            <div className=\"bg-green-100 p-2 rounded text-center border border-green-200\">\n              <div className=\"text-xs text-green-700\">True Negative</div>\n              <div className=\"font-bold\">{metrics.confusion_matrix.true_negatives}</div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-gray-50 p-3 rounded border border-gray-200 text-center\">\n            <p className=\"text-gray-500 text-sm\">Confusion matrix data not available</p>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"mb-4\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Top Predictive Features</h4>\n        {metrics.top_features && metrics.top_features.length > 0 ? (\n          <div className=\"max-h-40 overflow-y-auto bg-gray-50 rounded p-2 border border-gray-200\">\n            <table className=\"min-w-full text-sm\">\n              <thead>\n                <tr className=\"text-left text-gray-600\">\n                  <th className=\"py-1 px-2\">Feature</th>\n                  <th className=\"py-1 px-2\">Class</th>\n                  <th className=\"py-1 px-2\">Importance</th>\n                </tr>\n              </thead>\n              <tbody>\n                {metrics.top_features.map((feature, index) => (\n                  <tr key={index} className=\"border-t border-gray-200\">\n                    <td className=\"py-1 px-2 font-medium\">{feature.feature}</td>\n                    <td className=\"py-1 px-2\">\n                      <span className={`inline-block px-2 py-1 rounded-full text-xs ${\n                        feature.class === 'trash' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'\n                      }`}>\n                        {feature.class}\n                      </span>\n                    </td>\n                    <td className=\"py-1 px-2\">{feature.importance.toFixed(3)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"bg-gray-50 p-3 rounded border border-gray-200 text-center\">\n            <p className=\"text-gray-500 text-sm\">Feature importance data not available</p>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"grid grid-cols-2 gap-4 text-sm\">\n        <div className=\"bg-gray-50 p-2 rounded\">\n          <span className=\"text-gray-600\">Training data size:</span>\n          <span className=\"ml-2 font-medium\">{metrics.training_size || 'N/A'} {metrics.training_size ? 'examples' : ''}</span>\n        </div>\n        <div className=\"bg-gray-50 p-2 rounded\">\n          <span className=\"text-gray-600\">Test data size:</span>\n          <span className=\"ml-2 font-medium\">{metrics.test_size || 'N/A'} {metrics.test_size ? 'examples' : ''}</span>\n        </div>\n        <div className=\"bg-gray-50 p-2 rounded col-span-2\">\n          <span className=\"text-gray-600\">Training time:</span>\n          <span className=\"ml-2 font-medium\">{metrics.training_time || 'N/A'}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function CategoriesPage() {\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isKeywordModalOpen, setIsKeywordModalOpen] = useState(false);\n  const [isSenderRuleModalOpen, setIsSenderRuleModalOpen] = useState(false);\n  const [isViewRulesModalOpen, setIsViewRulesModalOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState<Category | null>(null);\n  const [newKeyword, setNewKeyword] = useState('');\n  const [newSenderRule, setNewSenderRule] = useState('');\n  const [isDomain, setIsDomain] = useState(true);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [initializingCategories, setInitializingCategories] = useState(false);\n  const [reprocessingEmails, setReprocessingEmails] = useState(false);\n  const [selectedCategoryKeywords, setSelectedCategoryKeywords] = useState<CategoryKeyword[]>([]);\n  const [selectedCategorySenderRules, setSelectedCategorySenderRules] = useState<SenderRule[]>([]);\n  const [loadingRules, setLoadingRules] = useState(false);\n  const [deletingCategory, setDeletingCategory] = useState<string | null>(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [categoryToDelete, setCategoryToDelete] = useState<Category | null>(null);\n  const [trainingClassifier, setTrainingClassifier] = useState(false);\n  const [classifierStatus, setClassifierStatus] = useState<ClassifierStatus | null>(null);\n  const [loadingClassifierStatus, setLoadingClassifierStatus] = useState(false);\n  const [bootstrappingData, setBootstrappingData] = useState(false);\n  const [modelMetrics, setModelMetrics] = useState<ModelMetrics | null>(null);\n  const [loadingMetrics, setLoadingMetrics] = useState(false);\n  const [evaluatingModel, setEvaluatingModel] = useState(false);\n\n  useEffect(() => {\n    async function fetchCategories() {\n      try {\n        setLoading(true);\n        const response = await getCategoriesApi();\n        setCategories(response.data);\n      } catch (err) {\n        setError('Failed to load categories');\n        console.error('Error fetching categories:', err);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchCategories();\n  }, [refreshTrigger]);\n\n  useEffect(() => {\n    // Fetch classifier status and metrics when the page loads\n    fetchClassifierStatus();\n    fetchModelMetrics();\n  }, []);\n\n  const fetchClassifierStatus = async () => {\n    try {\n      setLoadingClassifierStatus(true);\n      const status = await getTrashClassifierStatus();\n      setClassifierStatus(status);\n      \n      // If we have a trained model, also fetch metrics\n      if (status.is_model_available) {\n        fetchModelMetrics();\n      }\n    } catch (err) {\n      console.error('Error fetching classifier status:', err);\n    } finally {\n      setLoadingClassifierStatus(false);\n    }\n  };\n\n  const fetchModelMetrics = async () => {\n    try {\n      setLoadingMetrics(true);\n      const metrics = await getClassifierMetrics();\n      setModelMetrics(metrics);\n    } catch (err) {\n      console.error('Error fetching model metrics:', err);\n      // Create a default metrics object with empty/null values\n      // This ensures the UI can still render without errors\n      setModelMetrics({\n        accuracy: 0,\n        precision: 0,\n        recall: 0,\n        f1_score: 0,\n        confusion_matrix: {\n          true_positives: 0,\n          false_positives: 0,\n          true_negatives: 0,\n          false_negatives: 0\n        },\n        top_features: [],\n        training_size: 0,\n        test_size: 0,\n        training_time: 'N/A'\n      });\n    } finally {\n      setLoadingMetrics(false);\n    }\n  };\n\n  const handleTrainClassifier = async (testSize: number) => {\n    try {\n      setTrainingClassifier(true);\n      await trainTrashClassifier(testSize);\n      \n      // Show a notification\n      alert('Trash classifier training has started. This may take a few moments.');\n      \n      // Poll for status updates\n      const checkTrainingStatus = async () => {\n        const status = await getTrashClassifierStatus();\n        setClassifierStatus(status);\n        \n        if (status.is_model_available) {\n          // Training completed, fetch metrics\n          fetchModelMetrics();\n          return true;\n        }\n        return false;\n      };\n      \n      // Check status every 3 seconds for up to 30 seconds\n      let attempts = 0;\n      const maxAttempts = 10;\n      const interval = setInterval(async () => {\n        attempts++;\n        const isComplete = await checkTrainingStatus();\n        \n        if (isComplete || attempts >= maxAttempts) {\n          clearInterval(interval);\n          setTrainingClassifier(false);\n        }\n      }, 3000);\n    } catch (err) {\n      console.error('Error training classifier:', err);\n      alert('Failed to train classifier');\n      setTrainingClassifier(false);\n    }\n  };\n\n  const handleBootstrapData = async (testSize: number) => {\n    try {\n      setBootstrappingData(true);\n      await bootstrapTrashClassifier(testSize);\n      \n      // Show a notification\n      alert('Successfully prepared training data from your trash emails. Starting training process...');\n      \n      // Start training after bootstrap\n      await handleTrainClassifier(testSize);\n    } catch (err) {\n      console.error('Error bootstrapping training data:', err);\n      alert('Failed to prepare training data from trash');\n      setBootstrappingData(false);\n    }\n  };\n\n  const handleEvaluateModel = async () => {\n    try {\n      setEvaluatingModel(true);\n      const metrics = await evaluateTrashClassifier();\n      setModelMetrics(metrics);\n      alert('Model evaluation completed successfully');\n    } catch (err) {\n      console.error('Error evaluating model:', err);\n      alert('Failed to evaluate model');\n    } finally {\n      setEvaluatingModel(false);\n    }\n  };\n\n  const handleInitializeCategories = async () => {\n    try {\n      setInitializingCategories(true);\n      await initializeCategories();\n      setRefreshTrigger(prev => prev + 1); // Trigger a refresh\n      alert('Categories initialized successfully');\n    } catch (err) {\n      console.error('Error initializing categories:', err);\n      alert('Failed to initialize categories');\n    } finally {\n      setInitializingCategories(false);\n    }\n  };\n\n  const handleReprocessEmails = async () => {\n    try {\n      setReprocessingEmails(true);\n      const result = await reprocessAllEmails();\n      \n      // Show a more detailed alert with the results\n      const message = `\n        ✅ Reprocessing completed!\n        \n        📊 Summary:\n        • Total emails: ${result.total}\n        • Processed: ${result.processed}\n        • Category changes: ${Object.keys(result.category_changes).length}\n        • Emails moved to trash by ML: ${result.ml_classified_as_trash || 0}\n        • Importance changes: ${result.importance_changes}\n        • Duration: ${result.duration_seconds || 0}s\n      `;\n      \n      alert(message);\n    } catch (err) {\n      console.error('Error reprocessing emails:', err);\n      alert('Failed to reprocess emails');\n    } finally {\n      setReprocessingEmails(false);\n    }\n  };\n\n  const handleAddKeyword = async () => {\n    if (!selectedCategory || !newKeyword.trim()) return;\n    \n    try {\n      await addKeyword(selectedCategory.name, newKeyword.trim());\n      setNewKeyword('');\n      setIsKeywordModalOpen(false);\n      setRefreshTrigger(prev => prev + 1); // Trigger a refresh\n      alert('Keyword added successfully');\n    } catch (err) {\n      console.error('Error adding keyword:', err);\n      alert('Failed to add keyword');\n    }\n  };\n\n  const handleAddSenderRule = async () => {\n    if (!selectedCategory || !newSenderRule.trim()) return;\n    \n    try {\n      await addSenderRule(selectedCategory.name, newSenderRule.trim(), isDomain);\n      setNewSenderRule('');\n      setIsSenderRuleModalOpen(false);\n      setRefreshTrigger(prev => prev + 1); // Trigger a refresh\n      alert('Sender rule added successfully');\n    } catch (err) {\n      console.error('Error adding sender rule:', err);\n      alert('Failed to add sender rule');\n    }\n  };\n\n  const handleViewRules = async (category: Category) => {\n    try {\n      setSelectedCategory(category);\n      setLoadingRules(true);\n      \n      // Fetch the keywords and sender rules for the selected category\n      const [keywordsResponse, senderRulesResponse] = await Promise.all([\n        getCategoryKeywords(category.name),\n        getCategorySenderRules(category.name)\n      ]);\n      \n      setSelectedCategoryKeywords(keywordsResponse);\n      setSelectedCategorySenderRules(senderRulesResponse);\n      setIsViewRulesModalOpen(true);\n    } catch (err) {\n      console.error('Error fetching category rules:', err);\n      alert('Failed to fetch category rules');\n    } finally {\n      setLoadingRules(false);\n    }\n  };\n\n  const handleDeleteCategory = async (category: Category) => {\n    setCategoryToDelete(category);\n    setShowDeleteConfirm(true);\n  };\n\n  const confirmDeleteCategory = async () => {\n    if (!categoryToDelete) return;\n    \n    try {\n      setDeletingCategory(categoryToDelete.name);\n      await deleteCategory(categoryToDelete.name);\n      setRefreshTrigger(prev => prev + 1); // Trigger a refresh\n      \n      // Dispatch an event to notify the layout that categories have changed\n      // This will refresh the navigation sidebar\n      const event = new CustomEvent(EMAIL_SYNC_COMPLETED_EVENT);\n      window.dispatchEvent(event);\n      \n      alert(`Category \"${categoryToDelete.display_name}\" deleted successfully`);\n    } catch (err) {\n      console.error('Error deleting category:', err);\n      if (err instanceof Error && err.message.includes('403')) {\n        alert('System categories cannot be deleted');\n      } else {\n        alert('Failed to delete category');\n      }\n    } finally {\n      setDeletingCategory(null);\n      setShowDeleteConfirm(false);\n      setCategoryToDelete(null);\n    }\n  };\n\n  const handleCategoryAdded = () => {\n    setRefreshTrigger(prev => prev + 1); // Refresh the list\n    \n    // Dispatch an event to notify the layout that categories have changed\n    // This will refresh the navigation sidebar\n    const event = new CustomEvent(EMAIL_SYNC_COMPLETED_EVENT);\n    window.dispatchEvent(event);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-8 flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold mb-2\">Email Categories</h1>\n          <p className=\"text-gray-600\">Manage your email categories and classification rules</p>\n        </div>\n        <div className=\"flex space-x-4\">\n          <button \n            onClick={handleReprocessEmails}\n            disabled={reprocessingEmails}\n            className=\"bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded disabled:opacity-50\"\n          >\n            {reprocessingEmails ? 'Reprocessing...' : 'Reprocess All Emails'}\n          </button>\n          <button \n            onClick={handleInitializeCategories}\n            disabled={initializingCategories}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded disabled:opacity-50\"\n          >\n            {initializingCategories ? 'Initializing...' : 'Initialize Categories'}\n          </button>\n        </div>\n      </div>\n\n      {/* ML Classifier Section */}\n      <div className=\"mb-8 bg-white rounded-lg shadow-md p-6 border border-gray-200\">\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6\">\n          <div>\n            <h2 className=\"text-xl font-semibold flex items-center mb-2\">\n              <BeakerIcon className=\"h-6 w-6 mr-2 text-purple-600\" />\n              ML Trash Classifier\n            </h2>\n            <p className=\"text-gray-600\">\n              Train a model to automatically identify unwanted emails based on your preferences\n            </p>\n          </div>\n          \n          {classifierStatus?.is_model_available && (\n            <button\n              onClick={handleEvaluateModel}\n              disabled={evaluatingModel}\n              className=\"mt-4 md:mt-0 bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\"\n            >\n              {evaluatingModel ? (\n                <>\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Evaluating...\n                </>\n              ) : 'Evaluate Model'}\n            </button>\n          )}\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div>\n            {loadingClassifierStatus ? (\n              <div className=\"flex justify-center py-6\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-purple-500\"></div>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {/* Training status panel */}\n                <div className=\"bg-gray-50 p-4 rounded border border-gray-200\">\n                  <h3 className=\"font-medium text-gray-800 mb-2\">Training Status</h3>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <div className=\"text-sm text-gray-500\">Status</div>\n                      <div className={`font-medium ${classifierStatus?.is_model_available ? 'text-green-600' : 'text-amber-600'}`}>\n                        {classifierStatus?.is_model_available ? 'Model Active' : 'Not Available'}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-gray-500\">Training Data</div>\n                      <div className=\"font-medium\">\n                        {classifierStatus?.trash_events_count || 0} / {classifierStatus?.recommended_min_events || 10} events\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\n                        <div className=\"bg-purple-600 h-2 rounded-full\" style={{ \n                          width: `${Math.min(100, ((classifierStatus?.trash_events_count || 0) / (classifierStatus?.recommended_min_events || 10)) * 100)}%` \n                        }}></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Training configuration */}\n                <MLClassifierConfig \n                  onTrain={handleTrainClassifier}\n                  onBootstrap={handleBootstrapData}\n                  classifierStatus={classifierStatus}\n                  isTraining={trainingClassifier}\n                  isBootstrapping={bootstrappingData}\n                />\n                \n                {/* Model improvement tips */}\n                <div className=\"bg-yellow-50 p-4 rounded border border-yellow-200 text-sm\">\n                  <h3 className=\"font-medium text-yellow-800 mb-2\">Tips to Improve Model Performance</h3>\n                  <ul className=\"list-disc list-inside space-y-1 text-yellow-700\">\n                    <li>Add more examples by moving emails to trash</li>\n                    <li>Ensure your trash contains diverse example types</li>\n                    <li>Remove ambiguous examples from trash</li>\n                    <li>Reprocess your emails after training</li>\n                    <li>Add more distinctive keywords to categories</li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </div>\n          \n          <div>\n            {loadingMetrics ? (\n              <div className=\"flex justify-center py-6\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-purple-500\"></div>\n              </div>\n            ) : (\n              <ModelMetricsDisplay metrics={modelMetrics} />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {loading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n        </div>\n      ) : error ? (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          {error}\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2\">\n            <h2 className=\"text-xl font-semibold mb-4\">Existing Categories</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n              {categories.length === 0 ? (\n                <div className=\"bg-yellow-50 border border-yellow-100 text-yellow-700 px-4 py-3 rounded\">\n                  No categories found. Initialize categories or create a new one.\n                </div>\n              ) : (\n                categories.map((category) => (\n                  <div \n                    key={category.id} \n                    className=\"bg-white rounded-lg shadow-md p-6 border border-gray-200 hover:shadow-lg transition-shadow\"\n                  >\n                    <h2 className=\"text-xl font-semibold mb-2\">\n                      {category.display_name}\n                      <span className=\"ml-2 text-xs px-2 py-1 rounded bg-gray-100 text-gray-700\">\n                        {category.is_system ? 'System' : 'Custom'}\n                      </span>\n                    </h2>\n                    <p className=\"text-gray-600 mb-4\">{category.description || 'No description'}</p>\n                    <div className=\"flex justify-between text-sm text-gray-500\">\n                      <span>Priority: {category.priority}</span>\n                      <span>ID: {category.id}</span>\n                    </div>\n                    <div className=\"mt-4 pt-4 border-t border-gray-100 flex justify-between\">\n                      <div className=\"text-sm\">\n                        <span className=\"font-medium\">Keywords:</span> {category.keyword_count}\n                      </div>\n                      <div className=\"text-sm\">\n                        <span className=\"font-medium\">Sender Rules:</span> {category.sender_rule_count}\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex flex-wrap gap-2\">\n                      <button \n                        onClick={() => {\n                          setSelectedCategory(category);\n                          setIsKeywordModalOpen(true);\n                        }}\n                        className=\"text-sm bg-indigo-50 text-indigo-600 hover:bg-indigo-100 px-3 py-1 rounded\"\n                      >\n                        Add Keyword\n                      </button>\n                      <button \n                        onClick={() => {\n                          setSelectedCategory(category);\n                          setIsSenderRuleModalOpen(true);\n                        }}\n                        className=\"text-sm bg-indigo-50 text-indigo-600 hover:bg-indigo-100 px-3 py-1 rounded\"\n                      >\n                        Add Sender Rule\n                      </button>\n                      <button \n                        onClick={() => handleViewRules(category)}\n                        className=\"text-sm bg-green-50 text-green-600 hover:bg-green-100 px-3 py-1 rounded\"\n                      >\n                        View Rules\n                      </button>\n                      \n                      {/* Delete button - only shown for non-system categories */}\n                      {!category.is_system && (\n                        <button \n                          onClick={() => handleDeleteCategory(category)}\n                          disabled={deletingCategory === category.name}\n                          className=\"text-sm bg-red-50 text-red-600 hover:bg-red-100 px-3 py-1 rounded flex items-center\"\n                          title=\"Delete Category\"\n                        >\n                          <TrashIcon className=\"h-4 w-4 mr-1\" />\n                          Delete\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          <div className=\"lg:col-span-1\">\n            <NewCategoryForm onAddSuccess={handleCategoryAdded} />\n          </div>\n          \n          {/* Keyword Modal */}\n          {isKeywordModalOpen && selectedCategory && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n              <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\">\n                <h3 className=\"text-xl font-semibold mb-4\">Add Keyword to {selectedCategory.display_name}</h3>\n                <div className=\"mb-4\">\n                  <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Keyword\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newKeyword}\n                    onChange={(e) => setNewKeyword(e.target.value)}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    placeholder=\"Enter keyword\"\n                  />\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    onClick={() => setIsKeywordModalOpen(false)}\n                    className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium py-2 px-4 rounded\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleAddKeyword}\n                    className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2 px-4 rounded\"\n                  >\n                    Add Keyword\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Sender Rule Modal */}\n          {isSenderRuleModalOpen && selectedCategory && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n              <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\">\n                <h3 className=\"text-xl font-semibold mb-4\">Add Sender Rule to {selectedCategory.display_name}</h3>\n                <div className=\"mb-4\">\n                  <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Pattern\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newSenderRule}\n                    onChange={(e) => setNewSenderRule(e.target.value)}\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    placeholder={isDomain ? \"example.com\" : \"keyword\"}\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={isDomain}\n                      onChange={(e) => setIsDomain(e.target.checked)}\n                      className=\"mr-2\"\n                    />\n                    <span className=\"text-gray-700\">Is Domain</span>\n                  </label>\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    onClick={() => setIsSenderRuleModalOpen(false)}\n                    className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium py-2 px-4 rounded\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleAddSenderRule}\n                    className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2 px-4 rounded\"\n                  >\n                    Add Sender Rule\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* View Rules Modal */}\n          {isViewRulesModalOpen && selectedCategory && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n              <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\n                <h3 className=\"text-xl font-semibold mb-4\">Rules for {selectedCategory.display_name}</h3>\n                \n                {loadingRules ? (\n                  <div className=\"flex justify-center py-10\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-500\"></div>\n                  </div>\n                ) : (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    {/* Keywords Section */}\n                    <div>\n                      <h4 className=\"text-lg font-medium mb-3\">Keywords ({selectedCategoryKeywords.length})</h4>\n                      {selectedCategoryKeywords.length === 0 ? (\n                        <div className=\"bg-gray-50 p-4 rounded text-gray-600\">\n                          No keywords found for this category.\n                        </div>\n                      ) : (\n                        <div className=\"bg-gray-50 p-4 rounded\">\n                          <ul className=\"divide-y divide-gray-200\">\n                            {selectedCategoryKeywords.map((keyword) => (\n                              <li key={keyword.id} className=\"py-2\">\n                                <div className=\"flex items-center justify-between\">\n                                  <div className=\"font-medium\">{keyword.keyword}</div>\n                                  <div className=\"flex space-x-2 text-xs\">\n                                    {keyword.is_regex && (\n                                      <span className=\"px-2 py-1 bg-yellow-100 text-yellow-800 rounded\">Regex</span>\n                                    )}\n                                    <span className=\"px-2 py-1 bg-blue-100 text-blue-800 rounded\">\n                                      Weight: {keyword.weight}\n                                    </span>\n                                    {keyword.user_id ? (\n                                      <span className=\"px-2 py-1 bg-green-100 text-green-800 rounded\">User</span>\n                                    ) : (\n                                      <span className=\"px-2 py-1 bg-purple-100 text-purple-800 rounded\">System</span>\n                                    )}\n                                  </div>\n                                </div>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Sender Rules Section */}\n                    <div>\n                      <h4 className=\"text-lg font-medium mb-3\">Sender Rules ({selectedCategorySenderRules.length})</h4>\n                      {selectedCategorySenderRules.length === 0 ? (\n                        <div className=\"bg-gray-50 p-4 rounded text-gray-600\">\n                          No sender rules found for this category.\n                        </div>\n                      ) : (\n                        <div className=\"bg-gray-50 p-4 rounded\">\n                          <ul className=\"divide-y divide-gray-200\">\n                            {selectedCategorySenderRules.map((rule) => (\n                              <li key={rule.id} className=\"py-2\">\n                                <div className=\"flex items-center justify-between\">\n                                  <div className=\"font-medium\">{rule.pattern}</div>\n                                  <div className=\"flex space-x-2 text-xs\">\n                                    {rule.is_domain ? (\n                                      <span className=\"px-2 py-1 bg-orange-100 text-orange-800 rounded\">Domain</span>\n                                    ) : (\n                                      <span className=\"px-2 py-1 bg-gray-100 text-gray-800 rounded\">Substring</span>\n                                    )}\n                                    <span className=\"px-2 py-1 bg-blue-100 text-blue-800 rounded\">\n                                      Weight: {rule.weight}\n                                    </span>\n                                    {rule.user_id ? (\n                                      <span className=\"px-2 py-1 bg-green-100 text-green-800 rounded\">User</span>\n                                    ) : (\n                                      <span className=\"px-2 py-1 bg-purple-100 text-purple-800 rounded\">System</span>\n                                    )}\n                                  </div>\n                                </div>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n                \n                <div className=\"mt-6 flex justify-end\">\n                  <button\n                    onClick={() => setIsViewRulesModalOpen(false)}\n                    className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium py-2 px-4 rounded\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Delete Confirmation Modal */}\n          {showDeleteConfirm && categoryToDelete && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n              <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\">\n                <h3 className=\"text-xl font-semibold mb-4\">Delete Category</h3>\n                <p className=\"mb-6\">\n                  Are you sure you want to delete the category \"{categoryToDelete.display_name}\"? \n                  This will remove all associated keywords and sender rules. \n                  Emails in this category will be moved to the primary category.\n                </p>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    onClick={() => {\n                      setShowDeleteConfirm(false);\n                      setCategoryToDelete(null);\n                    }}\n                    className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium py-2 px-4 rounded\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={confirmDeleteCategory}\n                    disabled={deletingCategory === categoryToDelete.name}\n                    className=\"bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded disabled:opacity-50\"\n                  >\n                    {deletingCategory === categoryToDelete.name ? 'Deleting...' : 'Delete Category'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAuBA;AADA;AAAA;AAzBA;;;;;;AA4BA,+BAA+B;AAC/B,SAAS,gBAAgB,EAAE,YAAY,EAAgC;IACrE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,CAAC,QAAQ,CAAC,aAAa;QAE3B,gBAAgB;QAChB,SAAS;QAET,IAAI;YACF,MAAM,eAAsC;gBAC1C;gBACA,cAAc;gBACd,aAAa,eAAe;gBAC5B;YACF;YAEA,MAAM,CAAA,GAAA,iHAAA,CAAA,iBAAc,AAAD,EAAE;YAErB,aAAa;YACb,QAAQ;YACR,eAAe;YACf,eAAe;YACf,YAAY;YAEZ,oCAAoC;YACpC;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,SAAS;QACX,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,8OAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,8OAAC;gBAAG,WAAU;0BAA6B;;;;;;YAE1C,uBACC,8OAAC;gBAAI,WAAU;0BACZ;;;;;;0BAIL,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAA6C;;;;;;kCAG9D,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,QAAQ;wBACtE,WAAU;wBACV,aAAY;wBACZ,QAAQ;;;;;;;;;;;;0BAIZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAA6C;;;;;;kCAG9D,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,WAAU;wBACV,aAAY;wBACZ,QAAQ;;;;;;;;;;;;0BAIZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAA6C;;;;;;kCAG9D,8OAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,WAAU;wBACV,aAAY;wBACZ,MAAM;;;;;;;;;;;;0BAIV,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAA6C;;;;;;kCAG9D,8OAAC;wBACC,MAAK;wBACL,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,SAAS,EAAE,MAAM,CAAC,KAAK;wBACpD,WAAU;;;;;;;;;;;;0BAId,8OAAC;gBACC,MAAK;gBACL,UAAU,gBAAgB,CAAC,QAAQ,CAAC;gBACpC,WAAU;0BAET,eAAe,gBAAgB;;;;;;;;;;;;AAIxC;AAEA,wCAAwC;AACxC,SAAS,mBAAmB,EAC1B,OAAO,EACP,WAAW,EACX,gBAAgB,EAChB,UAAU,EACV,eAAe,EAOhB;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAiC;;;;;;0BAE/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAA+C;;;;;;kCAGhE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,KAAI;gCACJ,KAAI;gCACJ,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,WAAW,EAAE,MAAM,CAAC,KAAK;gCACtD,WAAU;;;;;;0CAEZ,8OAAC;gCAAK,WAAU;;oCAA8B,KAAK,KAAK,CAAC,WAAW;oCAAK;;;;;;;;;;;;;kCAE3E,8OAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;0BAK5C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,SAAS,IAAM,QAAQ;wBACvB,UAAU,cAAc,CAAC,kBAAkB,sBAAsB,CAAC,IAAI;wBACtE,WAAW,CAAC;;YAEV,EAAE,CAAC,kBAAkB,sBAAsB,CAAC,KAAK,KAC7C,+CACA,+CAA+C;UACrD,CAAC;kCAEA,2BACC;;8CACE,8OAAC;oCAAI,WAAU;oCAA6C,OAAM;oCAA6B,MAAK;oCAAO,SAAQ;;sDACjH,8OAAC;4CAAO,WAAU;4CAAa,IAAG;4CAAK,IAAG;4CAAK,GAAE;4CAAK,QAAO;4CAAe,aAAY;;;;;;sDACxF,8OAAC;4CAAK,WAAU;4CAAa,MAAK;4CAAe,GAAE;;;;;;;;;;;;gCAC/C;;2CAGN;;;;;;kCAGN,8OAAC;wBACC,SAAS,IAAM,YAAY;wBAC3B,UAAU;wBACV,WAAU;kCAET,gCACC;;8CACE,8OAAC;oCAAI,WAAU;oCAA6C,OAAM;oCAA6B,MAAK;oCAAO,SAAQ;;sDACjH,8OAAC;4CAAO,WAAU;4CAAa,IAAG;4CAAK,IAAG;4CAAK,GAAE;4CAAK,QAAO;4CAAe,aAAY;;;;;;sDACxF,8OAAC;4CAAK,WAAU;4CAAa,MAAK;4CAAe,GAAE;;;;;;;;;;;;gCAC/C;;2CAGN;;;;;;;;;;;;;;;;;;AAKd;AAEA,0BAA0B;AAC1B,SAAS,oBAAoB,EAAE,OAAO,EAAoC;IACxE,IAAI,CAAC,SAAS;QACZ,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAE,WAAU;0BAAgB;;;;;;;;;;;IAKnC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAE3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAsC;;;;;;0CACrD,8OAAC;gCAAI,WAAU;0CAAqC,QAAQ,QAAQ,KAAK,YAAY,GAAG,CAAC,QAAQ,QAAQ,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG;;;;;;;;;;;;kCAEnI,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAqC;;;;;;0CACpD,8OAAC;gCAAI,WAAU;0CAAoC,QAAQ,SAAS,KAAK,YAAY,GAAG,CAAC,QAAQ,SAAS,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG;;;;;;;;;;;;kCAEpI,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAoC;;;;;;0CACnD,8OAAC;gCAAI,WAAU;0CAAmC,QAAQ,MAAM,KAAK,YAAY,GAAG,CAAC,QAAQ,MAAM,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG;;;;;;;;;;;;kCAE7H,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAsC;;;;;;0CACrD,8OAAC;gCAAI,WAAU;0CAAqC,QAAQ,QAAQ,KAAK,YAAY,GAAG,CAAC,QAAQ,QAAQ,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG;;;;;;;;;;;;;;;;;;0BAIrI,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAyC;;;;;;oBACtD,QAAQ,gBAAgB,iBACvB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDAAyB;;;;;;kDACxC,8OAAC;wCAAI,WAAU;kDAAa,QAAQ,gBAAgB,CAAC,cAAc;;;;;;;;;;;;0CAErE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDAAuB;;;;;;kDACtC,8OAAC;wCAAI,WAAU;kDAAa,QAAQ,gBAAgB,CAAC,eAAe;;;;;;;;;;;;0CAEtE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDAAuB;;;;;;kDACtC,8OAAC;wCAAI,WAAU;kDAAa,QAAQ,gBAAgB,CAAC,eAAe;;;;;;;;;;;;0CAEtE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDAAyB;;;;;;kDACxC,8OAAC;wCAAI,WAAU;kDAAa,QAAQ,gBAAgB,CAAC,cAAc;;;;;;;;;;;;;;;;;6CAIvE,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;0BAK3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAyC;;;;;;oBACtD,QAAQ,YAAY,IAAI,QAAQ,YAAY,CAAC,MAAM,GAAG,kBACrD,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAM,WAAU;;8CACf,8OAAC;8CACC,cAAA,8OAAC;wCAAG,WAAU;;0DACZ,8OAAC;gDAAG,WAAU;0DAAY;;;;;;0DAC1B,8OAAC;gDAAG,WAAU;0DAAY;;;;;;0DAC1B,8OAAC;gDAAG,WAAU;0DAAY;;;;;;;;;;;;;;;;;8CAG9B,8OAAC;8CACE,QAAQ,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,sBAClC,8OAAC;4CAAe,WAAU;;8DACxB,8OAAC;oDAAG,WAAU;8DAAyB,QAAQ,OAAO;;;;;;8DACtD,8OAAC;oDAAG,WAAU;8DACZ,cAAA,8OAAC;wDAAK,WAAW,CAAC,4CAA4C,EAC5D,QAAQ,KAAK,KAAK,UAAU,4BAA4B,+BACxD;kEACC,QAAQ,KAAK;;;;;;;;;;;8DAGlB,8OAAC;oDAAG,WAAU;8DAAa,QAAQ,UAAU,CAAC,OAAO,CAAC;;;;;;;2CAT/C;;;;;;;;;;;;;;;;;;;;6CAgBjB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;0BAK3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;0CAChC,8OAAC;gCAAK,WAAU;;oCAAoB,QAAQ,aAAa,IAAI;oCAAM;oCAAE,QAAQ,aAAa,GAAG,aAAa;;;;;;;;;;;;;kCAE5G,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;0CAChC,8OAAC;gCAAK,WAAU;;oCAAoB,QAAQ,SAAS,IAAI;oCAAM;oCAAE,QAAQ,SAAS,GAAG,aAAa;;;;;;;;;;;;;kCAEpG,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;0CAChC,8OAAC;gCAAK,WAAU;0CAAoB,QAAQ,aAAa,IAAI;;;;;;;;;;;;;;;;;;;;;;;;AAKvE;AAEe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAC3D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnE,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAC1E,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrE,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,0BAA0B,4BAA4B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IAC9F,MAAM,CAAC,6BAA6B,+BAA+B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC/F,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAC1E,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA2B;IAClF,MAAM,CAAC,yBAAyB,2BAA2B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvE,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IACtE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,IAAI;gBACF,WAAW;gBACX,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,mBAAgB,AAAD;gBACtC,cAAc,SAAS,IAAI;YAC7B,EAAE,OAAO,KAAK;gBACZ,SAAS;gBACT,QAAQ,KAAK,CAAC,8BAA8B;YAC9C,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAe;IAEnB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,0DAA0D;QAC1D;QACA;IACF,GAAG,EAAE;IAEL,MAAM,wBAAwB;QAC5B,IAAI;YACF,2BAA2B;YAC3B,MAAM,SAAS,MAAM,CAAA,GAAA,iHAAA,CAAA,2BAAwB,AAAD;YAC5C,oBAAoB;YAEpB,iDAAiD;YACjD,IAAI,OAAO,kBAAkB,EAAE;gBAC7B;YACF;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,qCAAqC;QACrD,SAAU;YACR,2BAA2B;QAC7B;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI;YACF,kBAAkB;YAClB,MAAM,UAAU,MAAM,CAAA,GAAA,iHAAA,CAAA,uBAAoB,AAAD;YACzC,gBAAgB;QAClB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,yDAAyD;YACzD,sDAAsD;YACtD,gBAAgB;gBACd,UAAU;gBACV,WAAW;gBACX,QAAQ;gBACR,UAAU;gBACV,kBAAkB;oBAChB,gBAAgB;oBAChB,iBAAiB;oBACjB,gBAAgB;oBAChB,iBAAiB;gBACnB;gBACA,cAAc,EAAE;gBAChB,eAAe;gBACf,WAAW;gBACX,eAAe;YACjB;QACF,SAAU;YACR,kBAAkB;QACpB;IACF;IAEA,MAAM,wBAAwB,OAAO;QACnC,IAAI;YACF,sBAAsB;YACtB,MAAM,CAAA,GAAA,iHAAA,CAAA,uBAAoB,AAAD,EAAE;YAE3B,sBAAsB;YACtB,MAAM;YAEN,0BAA0B;YAC1B,MAAM,sBAAsB;gBAC1B,MAAM,SAAS,MAAM,CAAA,GAAA,iHAAA,CAAA,2BAAwB,AAAD;gBAC5C,oBAAoB;gBAEpB,IAAI,OAAO,kBAAkB,EAAE;oBAC7B,oCAAoC;oBACpC;oBACA,OAAO;gBACT;gBACA,OAAO;YACT;YAEA,oDAAoD;YACpD,IAAI,WAAW;YACf,MAAM,cAAc;YACpB,MAAM,WAAW,YAAY;gBAC3B;gBACA,MAAM,aAAa,MAAM;gBAEzB,IAAI,cAAc,YAAY,aAAa;oBACzC,cAAc;oBACd,sBAAsB;gBACxB;YACF,GAAG;QACL,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;YACN,sBAAsB;QACxB;IACF;IAEA,MAAM,sBAAsB,OAAO;QACjC,IAAI;YACF,qBAAqB;YACrB,MAAM,CAAA,GAAA,iHAAA,CAAA,2BAAwB,AAAD,EAAE;YAE/B,sBAAsB;YACtB,MAAM;YAEN,iCAAiC;YACjC,MAAM,sBAAsB;QAC9B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,sCAAsC;YACpD,MAAM;YACN,qBAAqB;QACvB;IACF;IAEA,MAAM,sBAAsB;QAC1B,IAAI;YACF,mBAAmB;YACnB,MAAM,UAAU,MAAM,CAAA,GAAA,iHAAA,CAAA,0BAAuB,AAAD;YAC5C,gBAAgB;YAChB,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,2BAA2B;YACzC,MAAM;QACR,SAAU;YACR,mBAAmB;QACrB;IACF;IAEA,MAAM,6BAA6B;QACjC,IAAI;YACF,0BAA0B;YAC1B,MAAM,CAAA,GAAA,iHAAA,CAAA,uBAAoB,AAAD;YACzB,kBAAkB,CAAA,OAAQ,OAAO,IAAI,oBAAoB;YACzD,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;QACR,SAAU;YACR,0BAA0B;QAC5B;IACF;IAEA,MAAM,wBAAwB;QAC5B,IAAI;YACF,sBAAsB;YACtB,MAAM,SAAS,MAAM,CAAA,GAAA,iHAAA,CAAA,qBAAkB,AAAD;YAEtC,8CAA8C;YAC9C,MAAM,UAAU,CAAC;;;;wBAIC,EAAE,OAAO,KAAK,CAAC;qBAClB,EAAE,OAAO,SAAS,CAAC;4BACZ,EAAE,OAAO,IAAI,CAAC,OAAO,gBAAgB,EAAE,MAAM,CAAC;uCACnC,EAAE,OAAO,sBAAsB,IAAI,EAAE;8BAC9C,EAAE,OAAO,kBAAkB,CAAC;oBACtC,EAAE,OAAO,gBAAgB,IAAI,EAAE;MAC7C,CAAC;YAED,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;QACR,SAAU;YACR,sBAAsB;QACxB;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,oBAAoB,CAAC,WAAW,IAAI,IAAI;QAE7C,IAAI;YACF,MAAM,CAAA,GAAA,iHAAA,CAAA,aAAU,AAAD,EAAE,iBAAiB,IAAI,EAAE,WAAW,IAAI;YACvD,cAAc;YACd,sBAAsB;YACtB,kBAAkB,CAAA,OAAQ,OAAO,IAAI,oBAAoB;YACzD,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR;IACF;IAEA,MAAM,sBAAsB;QAC1B,IAAI,CAAC,oBAAoB,CAAC,cAAc,IAAI,IAAI;QAEhD,IAAI;YACF,MAAM,CAAA,GAAA,iHAAA,CAAA,gBAAa,AAAD,EAAE,iBAAiB,IAAI,EAAE,cAAc,IAAI,IAAI;YACjE,iBAAiB;YACjB,yBAAyB;YACzB,kBAAkB,CAAA,OAAQ,OAAO,IAAI,oBAAoB;YACzD,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,MAAM;QACR;IACF;IAEA,MAAM,kBAAkB,OAAO;QAC7B,IAAI;YACF,oBAAoB;YACpB,gBAAgB;YAEhB,gEAAgE;YAChE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,MAAM,QAAQ,GAAG,CAAC;gBAChE,CAAA,GAAA,iHAAA,CAAA,sBAAmB,AAAD,EAAE,SAAS,IAAI;gBACjC,CAAA,GAAA,iHAAA,CAAA,yBAAsB,AAAD,EAAE,SAAS,IAAI;aACrC;YAED,4BAA4B;YAC5B,+BAA+B;YAC/B,wBAAwB;QAC1B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;QACR,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,uBAAuB,OAAO;QAClC,oBAAoB;QACpB,qBAAqB;IACvB;IAEA,MAAM,wBAAwB;QAC5B,IAAI,CAAC,kBAAkB;QAEvB,IAAI;YACF,oBAAoB,iBAAiB,IAAI;YACzC,MAAM,CAAA,GAAA,iHAAA,CAAA,iBAAc,AAAD,EAAE,iBAAiB,IAAI;YAC1C,kBAAkB,CAAA,OAAQ,OAAO,IAAI,oBAAoB;YAEzD,sEAAsE;YACtE,2CAA2C;YAC3C,MAAM,QAAQ,IAAI,YAAY,8IAAA,CAAA,6BAA0B;YACxD,OAAO,aAAa,CAAC;YAErB,MAAM,CAAC,UAAU,EAAE,iBAAiB,YAAY,CAAC,sBAAsB,CAAC;QAC1E,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,IAAI,eAAe,SAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ;gBACvD,MAAM;YACR,OAAO;gBACL,MAAM;YACR;QACF,SAAU;YACR,oBAAoB;YACpB,qBAAqB;YACrB,oBAAoB;QACtB;IACF;IAEA,MAAM,sBAAsB;QAC1B,kBAAkB,CAAA,OAAQ,OAAO,IAAI,mBAAmB;QAExD,sEAAsE;QACtE,2CAA2C;QAC3C,MAAM,QAAQ,IAAI,YAAY,8IAAA,CAAA,6BAA0B;QACxD,OAAO,aAAa,CAAC;IACvB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;kCAE/B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS;gCACT,UAAU;gCACV,WAAU;0CAET,qBAAqB,oBAAoB;;;;;;0CAE5C,8OAAC;gCACC,SAAS;gCACT,UAAU;gCACV,WAAU;0CAET,yBAAyB,oBAAoB;;;;;;;;;;;;;;;;;;0BAMpD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;;0DACZ,8OAAC,mNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;4CAAiC;;;;;;;kDAGzD,8OAAC;wCAAE,WAAU;kDAAgB;;;;;;;;;;;;4BAK9B,kBAAkB,oCACjB,8OAAC;gCACC,SAAS;gCACT,UAAU;gCACV,WAAU;0CAET,gCACC;;sDACE,8OAAC;4CAAI,WAAU;4CAA6C,OAAM;4CAA6B,MAAK;4CAAO,SAAQ;;8DACjH,8OAAC;oDAAO,WAAU;oDAAa,IAAG;oDAAK,IAAG;oDAAK,GAAE;oDAAK,QAAO;oDAAe,aAAY;;;;;;8DACxF,8OAAC;oDAAK,WAAU;oDAAa,MAAK;oDAAe,GAAE;;;;;;;;;;;;wCAC/C;;mDAGN;;;;;;;;;;;;kCAKV,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CACE,wCACC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;;;;;;;;;yDAGjB,8OAAC;oCAAI,WAAU;;sDAEb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAAiC;;;;;;8DAC/C,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;;8EACC,8OAAC;oEAAI,WAAU;8EAAwB;;;;;;8EACvC,8OAAC;oEAAI,WAAW,CAAC,YAAY,EAAE,kBAAkB,qBAAqB,mBAAmB,kBAAkB;8EACxG,kBAAkB,qBAAqB,iBAAiB;;;;;;;;;;;;sEAG7D,8OAAC;;8EACC,8OAAC;oEAAI,WAAU;8EAAwB;;;;;;8EACvC,8OAAC;oEAAI,WAAU;;wEACZ,kBAAkB,sBAAsB;wEAAE;wEAAI,kBAAkB,0BAA0B;wEAAG;;;;;;;8EAEhG,8OAAC;oEAAI,WAAU;8EACb,cAAA,8OAAC;wEAAI,WAAU;wEAAiC,OAAO;4EACrD,OAAO,GAAG,KAAK,GAAG,CAAC,KAAK,AAAC,CAAC,kBAAkB,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,0BAA0B,EAAE,IAAK,KAAK,CAAC,CAAC;wEACpI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDAOR,8OAAC;4CACC,SAAS;4CACT,aAAa;4CACb,kBAAkB;4CAClB,YAAY;4CACZ,iBAAiB;;;;;;sDAInB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAAmC;;;;;;8DACjD,8OAAC;oDAAG,WAAU;;sEACZ,8OAAC;sEAAG;;;;;;sEACJ,8OAAC;sEAAG;;;;;;sEACJ,8OAAC;sEAAG;;;;;;sEACJ,8OAAC;sEAAG;;;;;;sEACJ,8OAAC;sEAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAOd,8OAAC;0CACE,+BACC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;;;;;;;;;yDAGjB,8OAAC;oCAAoB,SAAS;;;;;;;;;;;;;;;;;;;;;;;YAMrC,wBACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;uBAEf,sBACF,8OAAC;gBAAI,WAAU;0BACZ;;;;;qCAGH,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAI,WAAU;0CACZ,WAAW,MAAM,KAAK,kBACrB,8OAAC;oCAAI,WAAU;8CAA0E;;;;;2CAIzF,WAAW,GAAG,CAAC,CAAC,yBACd,8OAAC;wCAEC,WAAU;;0DAEV,8OAAC;gDAAG,WAAU;;oDACX,SAAS,YAAY;kEACtB,8OAAC;wDAAK,WAAU;kEACb,SAAS,SAAS,GAAG,WAAW;;;;;;;;;;;;0DAGrC,8OAAC;gDAAE,WAAU;0DAAsB,SAAS,WAAW,IAAI;;;;;;0DAC3D,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;;4DAAK;4DAAW,SAAS,QAAQ;;;;;;;kEAClC,8OAAC;;4DAAK;4DAAK,SAAS,EAAE;;;;;;;;;;;;;0DAExB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;0EAAc;;;;;;4DAAgB;4DAAE,SAAS,aAAa;;;;;;;kEAExE,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;0EAAc;;;;;;4DAAoB;4DAAE,SAAS,iBAAiB;;;;;;;;;;;;;0DAGlF,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDACC,SAAS;4DACP,oBAAoB;4DACpB,sBAAsB;wDACxB;wDACA,WAAU;kEACX;;;;;;kEAGD,8OAAC;wDACC,SAAS;4DACP,oBAAoB;4DACpB,yBAAyB;wDAC3B;wDACA,WAAU;kEACX;;;;;;kEAGD,8OAAC;wDACC,SAAS,IAAM,gBAAgB;wDAC/B,WAAU;kEACX;;;;;;oDAKA,CAAC,SAAS,SAAS,kBAClB,8OAAC;wDACC,SAAS,IAAM,qBAAqB;wDACpC,UAAU,qBAAqB,SAAS,IAAI;wDAC5C,WAAU;wDACV,OAAM;;0EAEN,8OAAC,iNAAA,CAAA,YAAS;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;;;;;;;;uCAxDvC,SAAS,EAAE;;;;;;;;;;;;;;;;kCAmE1B,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAgB,cAAc;;;;;;;;;;;oBAIhC,sBAAsB,kCACrB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;;wCAA6B;wCAAgB,iBAAiB,YAAY;;;;;;;8CACxF,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAM,WAAU;sDAA6C;;;;;;sDAG9D,8OAAC;4CACC,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4CAC7C,WAAU;4CACV,aAAY;;;;;;;;;;;;8CAGhB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS,IAAM,sBAAsB;4CACrC,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;oBASR,yBAAyB,kCACxB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;;wCAA6B;wCAAoB,iBAAiB,YAAY;;;;;;;8CAC5F,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAM,WAAU;sDAA6C;;;;;;sDAG9D,8OAAC;4CACC,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;4CAChD,WAAU;4CACV,aAAa,WAAW,gBAAgB;;;;;;;;;;;;8CAG5C,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAM,WAAU;;0DACf,8OAAC;gDACC,MAAK;gDACL,SAAS;gDACT,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,OAAO;gDAC7C,WAAU;;;;;;0DAEZ,8OAAC;gDAAK,WAAU;0DAAgB;;;;;;;;;;;;;;;;;8CAGpC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS,IAAM,yBAAyB;4CACxC,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;oBASR,wBAAwB,kCACvB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;;wCAA6B;wCAAW,iBAAiB,YAAY;;;;;;;gCAElF,6BACC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;;;;;;;;;yDAGjB,8OAAC;oCAAI,WAAU;;sDAEb,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;;wDAA2B;wDAAW,yBAAyB,MAAM;wDAAC;;;;;;;gDACnF,yBAAyB,MAAM,KAAK,kBACnC,8OAAC;oDAAI,WAAU;8DAAuC;;;;;yEAItD,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAG,WAAU;kEACX,yBAAyB,GAAG,CAAC,CAAC,wBAC7B,8OAAC;gEAAoB,WAAU;0EAC7B,cAAA,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAI,WAAU;sFAAe,QAAQ,OAAO;;;;;;sFAC7C,8OAAC;4EAAI,WAAU;;gFACZ,QAAQ,QAAQ,kBACf,8OAAC;oFAAK,WAAU;8FAAkD;;;;;;8FAEpE,8OAAC;oFAAK,WAAU;;wFAA8C;wFACnD,QAAQ,MAAM;;;;;;;gFAExB,QAAQ,OAAO,iBACd,8OAAC;oFAAK,WAAU;8FAAgD;;;;;yGAEhE,8OAAC;oFAAK,WAAU;8FAAkD;;;;;;;;;;;;;;;;;;+DAbjE,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;sDAyB7B,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;;wDAA2B;wDAAe,4BAA4B,MAAM;wDAAC;;;;;;;gDAC1F,4BAA4B,MAAM,KAAK,kBACtC,8OAAC;oDAAI,WAAU;8DAAuC;;;;;yEAItD,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAG,WAAU;kEACX,4BAA4B,GAAG,CAAC,CAAC,qBAChC,8OAAC;gEAAiB,WAAU;0EAC1B,cAAA,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAI,WAAU;sFAAe,KAAK,OAAO;;;;;;sFAC1C,8OAAC;4EAAI,WAAU;;gFACZ,KAAK,SAAS,iBACb,8OAAC;oFAAK,WAAU;8FAAkD;;;;;yGAElE,8OAAC;oFAAK,WAAU;8FAA8C;;;;;;8FAEhE,8OAAC;oFAAK,WAAU;;wFAA8C;wFACnD,KAAK,MAAM;;;;;;;gFAErB,KAAK,OAAO,iBACX,8OAAC;oFAAK,WAAU;8FAAgD;;;;;yGAEhE,8OAAC;oFAAK,WAAU;8FAAkD;;;;;;;;;;;;;;;;;;+DAfjE,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;8CA4B9B,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCACC,SAAS,IAAM,wBAAwB;wCACvC,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;oBASR,qBAAqB,kCACpB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,8OAAC;oCAAE,WAAU;;wCAAO;wCAC6B,iBAAiB,YAAY;wCAAC;;;;;;;8CAI/E,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS;gDACP,qBAAqB;gDACrB,oBAAoB;4CACtB;4CACA,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,SAAS;4CACT,UAAU,qBAAqB,iBAAiB,IAAI;4CACpD,WAAU;sDAET,qBAAqB,iBAAiB,IAAI,GAAG,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUlF"}},
    {"offset": {"line": 2377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}