{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/ui/iframe-email-viewer.tsx"],"sourcesContent":["import React, { useRef, useState, useCallback } from 'react';\n\ninterface IframeEmailViewerProps {\n  htmlContent: string;\n}\n\n/**\n * IframeEmailViewer loads HTML into an iframe and auto-resizes\n * the iframe's height to match the content to avoid double scrollbars.\n */\nexport function IframeEmailViewer({ htmlContent }: IframeEmailViewerProps) {\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const [iframeHeight, setIframeHeight] = useState<number>(600);\n\n  /**\n   * Called when the iframe loads. Measures the content height and updates state.\n   */\n  const handleIframeLoad = useCallback(() => {\n    if (!iframeRef.current) return;\n\n    const iframe = iframeRef.current;\n    const iframeDoc = iframe.contentDocument || iframe.contentWindow?.document;\n    if (!iframeDoc) return;\n\n    // Use scrollHeight to get the total height of the iframe content.\n    const newHeight = iframeDoc.body.scrollHeight;\n    setIframeHeight(newHeight);\n  }, []);\n\n  return (\n    <iframe\n      ref={iframeRef}\n      srcDoc={htmlContent}\n      onLoad={handleIframeLoad}\n      sandbox=\"allow-same-origin allow-popups allow-scripts\"\n      style={{\n        width: '100%',\n        border: 'none',\n        // Dynamically set the height\n        height: `${iframeHeight}px`,\n        // Optional: smooth scrolling inside the iframe\n        overflow: 'auto'\n      }}\n    />\n  );\n}\n\nexport default IframeEmailViewer;\n"],"names":[],"mappings":";;;;;AAAA;;;AAUO,SAAS,kBAAkB,EAAE,WAAW,EAA0B;IACvE,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAqB;IAC5C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEzD;;GAEC,GACD,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACnC,IAAI,CAAC,UAAU,OAAO,EAAE;QAExB,MAAM,SAAS,UAAU,OAAO;QAChC,MAAM,YAAY,OAAO,eAAe,IAAI,OAAO,aAAa,EAAE;QAClE,IAAI,CAAC,WAAW;QAEhB,kEAAkE;QAClE,MAAM,YAAY,UAAU,IAAI,CAAC,YAAY;QAC7C,gBAAgB;IAClB,GAAG,EAAE;IAEL,qBACE,8OAAC;QACC,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,SAAQ;QACR,OAAO;YACL,OAAO;YACP,QAAQ;YACR,6BAA6B;YAC7B,QAAQ,GAAG,aAAa,EAAE,CAAC;YAC3B,+CAA+C;YAC/C,UAAU;QACZ;;;;;;AAGN;uCAEe"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/utils/toast-config.ts"],"sourcesContent":["// Toast configuration settings for consistent behavior across the application\n\nimport { toast, ToastOptions } from 'react-hot-toast';\n\n// Extended duration for toasts (6 seconds instead of default 3)\nexport const defaultToastOptions: ToastOptions = {\n  duration: 6000, // 6 seconds\n  position: 'top-right',\n};\n\n// Wrapper functions to ensure consistent toast behavior\nexport const showSuccessToast = (message: string, options?: ToastOptions) => {\n  return toast.success(message, { ...defaultToastOptions, ...options });\n};\n\nexport const showErrorToast = (message: string, options?: ToastOptions) => {\n  return toast.error(message, { ...defaultToastOptions, ...options });\n};\n\nexport const showLoadingToast = (message: string, options?: ToastOptions) => {\n  return toast.loading(message, { ...defaultToastOptions, ...options });\n};\n\n// Utility to dismiss all toasts\nexport const dismissAllToasts = () => {\n  toast.dismiss();\n}; "],"names":[],"mappings":"AAAA,8EAA8E;;;;;;;;AAE9E;;AAGO,MAAM,sBAAoC;IAC/C,UAAU;IACV,UAAU;AACZ;AAGO,MAAM,mBAAmB,CAAC,SAAiB;IAChD,OAAO,uJAAA,CAAA,QAAK,CAAC,OAAO,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACrE;AAEO,MAAM,iBAAiB,CAAC,SAAiB;IAC9C,OAAO,uJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACnE;AAEO,MAAM,mBAAmB,CAAC,SAAiB;IAChD,OAAO,uJAAA,CAAA,QAAK,CAAC,OAAO,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACrE;AAGO,MAAM,mBAAmB;IAC9B,uJAAA,CAAA,QAAK,CAAC,OAAO;AACf"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/ui/email-label.tsx"],"sourcesContent":["'use client';\n\nimport React, { useMemo } from 'react';\nimport { useCategoryContext } from '@/lib/category-context';\n\ninterface EmailLabelProps {\n  label: string;\n  className?: string;\n  variant?: 'default' | 'compact';\n  showPrefix?: boolean;\n}\n\n/**\n * Converts raw Gmail labels to user-friendly display labels\n */\nexport function getDisplayLabel(label: string): string {\n  // First check if it's a category label (those should be handled by the category context)\n  if (label.startsWith('CATEGORY_') || label === 'PRIMARY') {\n    return ''; // This will be handled by getCategoryInfo in components\n  }\n  \n  // For non-category labels, use this mapping\n  const labelMap: Record<string, string> = {\n    'INBOX': 'Inbox',\n    'UNREAD': 'Unread',\n    'TRASH': 'Trash',\n    'IMPORTANT': '★',\n    'ARCHIVE': 'Archive',\n  };\n  \n  return labelMap[label] || label;\n}\n\n/**\n * Gets the appropriate styling for different label types\n */\nexport function getLabelStyle(label: string): string {\n  // If it's a category label, this will be handled by the category context elsewhere\n  if (label.startsWith('CATEGORY_') || label === 'PRIMARY') {\n    return '';\n  }\n  \n  // Define different background and text colors for different labels\n  switch (label.toUpperCase()) {\n    case 'INBOX':\n      return 'bg-blue-100 text-blue-800 border border-blue-200';\n    case 'UNREAD':\n      return 'bg-yellow-100 text-yellow-800 border border-yellow-200';\n    case 'TRASH':\n      return 'bg-red-100 text-red-800 border border-red-200';\n    case 'IMPORTANT':\n      return 'bg-amber-100 text-amber-800 border border-amber-200';\n    case 'ARCHIVE':\n      return 'bg-gray-100 text-gray-800 border border-gray-200';\n    default:\n      return 'bg-gray-100 text-gray-800 border border-gray-200';\n  }\n}\n\n/**\n * Email label component that displays a user-friendly label with appropriate styling\n */\nexport function EmailLabel({ label, className = '', variant = 'default', showPrefix = true }: EmailLabelProps) {\n  const { getCategoryInfo } = useCategoryContext();\n  \n  // For category labels, get info from the context\n  const isCategoryLabel = label.startsWith('CATEGORY_') || label === 'PRIMARY';\n  const categoryInfo = isCategoryLabel ? getCategoryInfo(label) : null;\n  \n  // If this is a category label and we have category info, use that\n  if (isCategoryLabel && categoryInfo) {\n    const baseClasses = variant === 'compact' \n      ? 'px-2 py-0.5 text-xs font-medium rounded-full'\n      : 'px-2.5 py-0.5 text-xs font-medium rounded-full';\n      \n    return (\n      <span className={`${baseClasses} ${categoryInfo.color} ${className}`}>\n        {showPrefix && <span className=\"mr-1 opacity-70\">Category:</span>}\n        {categoryInfo.display_name}\n      </span>\n    );\n  }\n  \n  // For non-category labels, use the original logic\n  const displayLabel = getDisplayLabel(label);\n  const style = getLabelStyle(label);\n  const isImportant = label.toUpperCase() === 'IMPORTANT';\n  \n  // For important label, show just the star\n  if (isImportant) {\n    return (\n      <span className={`inline-flex items-center text-amber-500 ${className}`} title=\"Important\">\n        {displayLabel}\n      </span>\n    );\n  }\n  \n  // For compact variant, use smaller padding\n  const baseClasses = variant === 'compact' \n    ? 'px-2 py-0.5 text-xs font-medium rounded-full'\n    : 'px-2.5 py-0.5 text-xs font-medium rounded-full';\n  \n  return (\n    <span className={`${baseClasses} ${style} ${className}`}>\n      {showPrefix && !isImportant && label !== 'INBOX' && <span className=\"mr-1 opacity-70\">Label:</span>}\n      {displayLabel}\n    </span>\n  );\n}\n\n/**\n * Filters and maps raw Gmail labels to display-friendly EmailLabel components\n */\nexport function mapLabelsToComponents(\n  labels: string[], \n  options: { \n    showSystem?: boolean;\n    variant?: 'default' | 'compact';\n    includeCategoryLabels?: boolean;\n    showPrefix?: boolean;\n  } = {}\n): React.ReactNode[] {\n  const { showSystem = false, variant = 'default', includeCategoryLabels = false, showPrefix = true } = options;\n  \n  if (!labels || labels.length === 0) return [];\n  \n  // System labels that shouldn't be displayed\n  const systemLabels = ['EA_NEEDS_LABEL_UPDATE', 'SENT', 'DRAFT'];\n  \n  // Important label should always be first if present\n  const sortedLabels = [...labels].sort((a, b) => {\n    if (a === 'IMPORTANT') return -1;\n    if (b === 'IMPORTANT') return 1;\n    return 0;\n  });\n  \n  return sortedLabels\n    .filter(label => {\n      if (!showSystem && systemLabels.includes(label)) return false;\n      // Don't show category labels here unless explicitly requested\n      if (!includeCategoryLabels && (label.startsWith('CATEGORY_') || label === 'PRIMARY')) return false;\n      return true;\n    })\n    .map(label => (\n      <EmailLabel key={label} label={label} variant={variant} showPrefix={showPrefix} />\n    ));\n} "],"names":[],"mappings":";;;;;;;AAGA;AAHA;;;AAeO,SAAS,gBAAgB,KAAa;IAC3C,yFAAyF;IACzF,IAAI,MAAM,UAAU,CAAC,gBAAgB,UAAU,WAAW;QACxD,OAAO,IAAI,wDAAwD;IACrE;IAEA,4CAA4C;IAC5C,MAAM,WAAmC;QACvC,SAAS;QACT,UAAU;QACV,SAAS;QACT,aAAa;QACb,WAAW;IACb;IAEA,OAAO,QAAQ,CAAC,MAAM,IAAI;AAC5B;AAKO,SAAS,cAAc,KAAa;IACzC,mFAAmF;IACnF,IAAI,MAAM,UAAU,CAAC,gBAAgB,UAAU,WAAW;QACxD,OAAO;IACT;IAEA,mEAAmE;IACnE,OAAQ,MAAM,WAAW;QACvB,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAKO,SAAS,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,UAAU,SAAS,EAAE,aAAa,IAAI,EAAmB;IAC3G,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,qBAAkB,AAAD;IAE7C,iDAAiD;IACjD,MAAM,kBAAkB,MAAM,UAAU,CAAC,gBAAgB,UAAU;IACnE,MAAM,eAAe,kBAAkB,gBAAgB,SAAS;IAEhE,kEAAkE;IAClE,IAAI,mBAAmB,cAAc;QACnC,MAAM,cAAc,YAAY,YAC5B,iDACA;QAEJ,qBACE,8OAAC;YAAK,WAAW,GAAG,YAAY,CAAC,EAAE,aAAa,KAAK,CAAC,CAAC,EAAE,WAAW;;gBACjE,4BAAc,8OAAC;oBAAK,WAAU;8BAAkB;;;;;;gBAChD,aAAa,YAAY;;;;;;;IAGhC;IAEA,kDAAkD;IAClD,MAAM,eAAe,gBAAgB;IACrC,MAAM,QAAQ,cAAc;IAC5B,MAAM,cAAc,MAAM,WAAW,OAAO;IAE5C,0CAA0C;IAC1C,IAAI,aAAa;QACf,qBACE,8OAAC;YAAK,WAAW,CAAC,wCAAwC,EAAE,WAAW;YAAE,OAAM;sBAC5E;;;;;;IAGP;IAEA,2CAA2C;IAC3C,MAAM,cAAc,YAAY,YAC5B,iDACA;IAEJ,qBACE,8OAAC;QAAK,WAAW,GAAG,YAAY,CAAC,EAAE,MAAM,CAAC,EAAE,WAAW;;YACpD,cAAc,CAAC,eAAe,UAAU,yBAAW,8OAAC;gBAAK,WAAU;0BAAkB;;;;;;YACrF;;;;;;;AAGP;AAKO,SAAS,sBACd,MAAgB,EAChB,UAKI,CAAC,CAAC;IAEN,MAAM,EAAE,aAAa,KAAK,EAAE,UAAU,SAAS,EAAE,wBAAwB,KAAK,EAAE,aAAa,IAAI,EAAE,GAAG;IAEtG,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG,OAAO,EAAE;IAE7C,4CAA4C;IAC5C,MAAM,eAAe;QAAC;QAAyB;QAAQ;KAAQ;IAE/D,oDAAoD;IACpD,MAAM,eAAe;WAAI;KAAO,CAAC,IAAI,CAAC,CAAC,GAAG;QACxC,IAAI,MAAM,aAAa,OAAO,CAAC;QAC/B,IAAI,MAAM,aAAa,OAAO;QAC9B,OAAO;IACT;IAEA,OAAO,aACJ,MAAM,CAAC,CAAA;QACN,IAAI,CAAC,cAAc,aAAa,QAAQ,CAAC,QAAQ,OAAO;QACxD,8DAA8D;QAC9D,IAAI,CAAC,yBAAyB,CAAC,MAAM,UAAU,CAAC,gBAAgB,UAAU,SAAS,GAAG,OAAO;QAC7F,OAAO;IACT,GACC,GAAG,CAAC,CAAA,sBACH,8OAAC;YAAuB,OAAO;YAAO,SAAS;YAAS,YAAY;WAAnD;;;;;AAEvB"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/email-content.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { type Email, updateEmailCategory, archiveEmail } from '@/lib/api';\nimport { toast } from 'react-hot-toast';\nimport { IframeEmailViewer } from '@/components/ui/iframe-email-viewer';\nimport { showSuccessToast, showErrorToast, showLoadingToast, dismissAllToasts } from '@/utils/toast-config';\nimport { mapLabelsToComponents } from '@/components/ui/email-label';\nimport { useCategoryContext } from '@/lib/category-context';\n\nfunction decodeBase64Url(str: string): string {\n  const base64 = str.replace(/-/g, '+').replace(/_/g, '/');\n  try {\n    return atob(base64);\n  } catch (e) {\n    console.error('Failed to decode Base64 string', e);\n    return '';\n  }\n}\n\nfunction normalizeCategory(cat: string | undefined): string {\n  if (!cat) return 'primary';\n  \n  // Process specific category mappings if needed\n  const lowerCat = cat.toLowerCase();\n  if (lowerCat === 'promotional') return 'promotions';\n  if (lowerCat === 'important') return 'important';\n  \n  // For all others, keep the original case from the API\n  // This ensures consistent display between list and detail views\n  return cat; \n}\n\nfunction extractEmailBody(payload: any): string {\n  if (payload.body && payload.body.data) {\n    return decodeBase64Url(payload.body.data);\n  }\n  if (payload.parts && payload.parts.length > 0) {\n    const htmlPart = payload.parts.find((part: any) => part.mimeType === 'text/html');\n    if (htmlPart?.body?.data) {\n      return decodeBase64Url(htmlPart.body.data);\n    }\n    const textPart = payload.parts.find((part: any) => part.mimeType === 'text/plain');\n    if (textPart?.body?.data) {\n      return decodeBase64Url(textPart.body.data);\n    }\n  }\n  return '';\n}\n\ninterface EmailContentProps {\n  email: Email;\n  onLabelsUpdated?: (updatedEmail: Email) => void;\n}\n\nexport function EmailContent({ email, onLabelsUpdated }: EmailContentProps) {\n  const [bodyContent, setBodyContent] = useState<string>('');\n  const [selectedCategory, setSelectedCategory] = useState(() => {\n    // Initialize with the exact category from the API without normalization\n    return (email.category || 'primary').toLowerCase();\n  });\n  const [updating, setUpdating] = useState(false);\n  const { categories } = useCategoryContext();\n\n  const decodedContent = useMemo(() => {\n    if (email?.raw_data?.payload) {\n      return extractEmailBody(email.raw_data.payload);\n    }\n    return '';\n  }, [email]);\n\n  useEffect(() => {\n    setBodyContent(decodedContent);\n  }, [decodedContent]);\n\n  useEffect(() => {\n    // When email.category changes, update selectedCategory with exact value from the API\n    if (email.category) {\n      setSelectedCategory(email.category.toLowerCase());\n    }\n  }, [email.category]);\n\n  // Get category options from the CategoryContext\n  const categoryOptions = useMemo(() => {\n    // First, grab categories from context and format for dropdown\n    const contextCategories = categories.map(cat => ({\n      value: cat.name.toLowerCase(), // Use lowercase name for consistency with backend\n      label: cat.display_name,\n      priority: cat.priority\n    }));\n    \n    // Sort by priority (lower number = higher priority)\n    return contextCategories.sort((a, b) => a.priority - b.priority);\n  }, [categories]);\n\n  const handleCategoryChange = async (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newCategory = e.target.value.toLowerCase();\n    // Set the category exactly as selected from the dropdown\n    setSelectedCategory(newCategory);\n    \n    try {\n      setUpdating(true);\n      // Show a toast with the loading state that can be dismissed\n      const toastId = showLoadingToast('Updating category...');\n      \n      // Pass the exact category value to the API\n      const response = await updateEmailCategory(email.id, newCategory);\n      \n      // Always dismiss the loading toast\n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast(response.message || 'Category updated successfully');\n        \n        // Update the email object with new category and labels from the API response\n        const updatedEmail = {\n          ...email,\n          category: response.category, // Use the category exactly as returned from the API\n          labels: response.labels,\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        // Handle error in successful response but with error status\n        showErrorToast(response.message || 'Failed to update category');\n      }\n    } catch (error) {\n      // Dismiss all loading toasts\n      dismissAllToasts();\n      \n      // Show a meaningful error toast\n      const errorMessage = error instanceof Error ? error.message : 'Error updating category';\n      showErrorToast(errorMessage);\n      console.error('Error updating category:', error);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  const handleArchive = async () => {\n    try {\n      // Determine if we're archiving or unarchiving\n      const isArchived = !email.labels.includes('INBOX');\n      const actionText = isArchived ? 'Unarchiving' : 'Archiving';\n      \n      // Show a toast with the loading state that can be dismissed\n      const toastId = showLoadingToast(`${actionText} email...`);\n      \n      const response = await archiveEmail(email.id);\n      \n      // Always dismiss the loading toast\n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast(response.message || `Email ${isArchived ? 'unarchived' : 'archived'} successfully`);\n        \n        // Update the email object with new labels\n        const updatedEmail = {\n          ...email,\n          labels: response.labels || email.labels,\n          // Update the category if returned from the API\n          category: response.category || email.category\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        // Handle error in successful response but with error status\n        showErrorToast(response.message || `Failed to ${isArchived ? 'unarchive' : 'archive'} email`);\n      }\n    } catch (error) {\n      // Dismiss all loading toasts\n      dismissAllToasts();\n      \n      // Show a meaningful error toast\n      const errorMessage = error instanceof Error ? error.message : `Error ${email.labels.includes('INBOX') ? 'archiving' : 'unarchiving'} email`;\n      showErrorToast(errorMessage);\n      console.error(`Error ${email.labels.includes('INBOX') ? 'archiving' : 'unarchiving'} email:`, error);\n    }\n  };\n\n  // Filter out inconsistent labels - don't show INBOX if email is in TRASH\n  const filteredLabels = useMemo(() => {\n    if (!email.labels) return [];\n    \n    // If this email has TRASH label, don't display INBOX label\n    if (email.labels.includes('TRASH')) {\n      return email.labels.filter(label => label !== 'INBOX');\n    }\n    \n    return email.labels;\n  }, [email.labels]);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <h1 className=\"text-xl font-bold mb-2\">{email.subject}</h1>\n      <p className=\"mb-2 text-gray-700\">From: {email.from_email}</p>\n\n      {email.labels.includes('TRASH') && (\n        <div className=\"my-3 px-4 py-3 bg-red-50 border-l-4 border-red-500 text-red-700\">\n          <span className=\"font-semibold\">⚠️ This email is in Trash</span>\n        </div>\n      )}\n\n      <div className=\"mb-4\">\n        <p className=\"font-medium text-sm mb-1\">Labels:</p>\n        <div className=\"flex flex-wrap gap-2\">\n          {filteredLabels.length > 0 ? (\n            mapLabelsToComponents(filteredLabels)\n          ) : (\n            <span className=\"text-gray-500\">None</span>\n          )}\n        </div>\n      </div>\n\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={handleArchive}\n            className=\"px-3 py-1 bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-md flex items-center text-sm\"\n            disabled={updating}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8\" />\n            </svg>\n            {email.labels.includes('INBOX') ? 'Archive' : 'Unarchive'}\n          </button>\n        </div>\n        \n        <div className=\"mb-4\">\n          <span className=\"font-semibold mr-2\">Category:</span>\n          <select\n            value={selectedCategory}\n            onChange={handleCategoryChange}\n            disabled={updating}\n            className=\"bg-gray-100 text-gray-800 rounded px-3 py-1 text-xs font-semibold\"\n          >\n            {categoryOptions.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n          {updating && <span className=\"ml-2 text-gray-500 text-xs\">Updating...</span>}\n        </div>\n      </div>\n\n      {/* Instead of directly rendering the HTML, use the IframeEmailViewer */}\n      <div className=\"border border-gray-200 rounded\">\n        <IframeEmailViewer htmlContent={bodyContent} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 616, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/email-detail.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter, useSearchParams, ReadonlyURLSearchParams } from 'next/navigation';\nimport { getEmailById, type Email } from '@/lib/api';\nimport { isAuthenticated, handleAuthError } from '@/lib/auth';\nimport { EmailContent } from './email-content';\nimport { Toaster } from 'react-hot-toast';\n\ninterface EmailDetailProps {\n    emailId: string;\n}\n\nexport default function EmailDetail({ emailId }: EmailDetailProps) {\n    const router = useRouter();\n    const searchParams = useSearchParams();\n    const [email, setEmail] = useState<Email | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    // Get any filter parameters that we need to preserve\n    const backToEmailsUrl = constructBackUrl(searchParams);\n\n    function constructBackUrl(params: URLSearchParams | ReadonlyURLSearchParams | null): string {\n        // Start with base URL\n        let url = '/emails';\n        \n        // Check if we have any params to add\n        const category = params?.get('category') ?? null;\n        const status = params?.get('status') ?? null;\n        const label = params?.get('label') ?? null;\n        \n        const queryParams = [];\n        if (category) queryParams.push(`category=${category}`);\n        if (status) queryParams.push(`status=${status}`);\n        if (label) queryParams.push(`label=${label}`);\n        \n        // If we're in a trash email detail but no category was specified in URL,\n        // and the email has the TRASH label, add the trash category filter\n        if (!category && email?.labels?.includes('TRASH')) {\n            queryParams.push('category=trash');\n        }\n        \n        // Add query params if any exist\n        if (queryParams.length > 0) {\n            url += `?${queryParams.join('&')}`;\n        }\n        \n        return url;\n    }\n\n    useEffect(() => {\n        const fetchEmail = async () => {\n            try {\n                if (!isAuthenticated()) {\n                    console.log('User not authenticated, redirecting to authentication');\n                    handleAuthError();\n                    return;\n                }\n\n                setLoading(true);\n                console.log('Fetching email details...');\n                const data = await getEmailById(emailId);\n                console.log('Email details fetched:', data);\n                setEmail(data);\n                setError(null);\n            } catch (err) {\n                console.error('Error in email detail page:', err);\n                const errorMessage = err instanceof Error ? err.message : 'Failed to fetch email';\n                \n                // Check if this is an authentication error\n                if (errorMessage.includes('Authentication failed') || \n                    errorMessage.includes('token') || \n                    errorMessage.includes('401')) {\n                    handleAuthError();\n                    return;\n                }\n                \n                setError(errorMessage);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (emailId) {\n            fetchEmail();\n        }\n    }, [emailId, router]);\n\n    // Handle label updates\n    const handleLabelsUpdated = (updatedEmail: Email) => {\n        setEmail(updatedEmail);\n    };\n\n    if (loading) {\n        return (\n            <div className=\"flex items-center justify-center h-full\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"p-6 bg-white rounded-2xl shadow-lg border border-gray-300\">\n                <button \n                    className=\"text-blue-600 text-sm mb-4\" \n                    onClick={() => router.push(backToEmailsUrl)}\n                >\n                    ← Back to Emails\n                </button>\n                <div className=\"text-center\">\n                    <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Error</h2>\n                    <p className=\"text-gray-600\">{error}</p>\n                </div>\n            </div>\n        );\n    }\n\n    if (!email) {\n        return (\n            <div className=\"p-6 bg-white rounded-2xl shadow-lg border border-gray-300\">\n                <button \n                    className=\"text-blue-600 text-sm mb-4\" \n                    onClick={() => router.push(backToEmailsUrl)}\n                >\n                    ← Back to Emails\n                </button>\n                <div className=\"text-center\">\n                    <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Email not found</h2>\n                    <p className=\"text-gray-600\">The requested email could not be found.</p>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"p-6 bg-white rounded-2xl shadow-lg border border-gray-300\">\n            <Toaster position=\"top-right\" toastOptions={{ duration: 6000 }} />\n            <button \n                className=\"text-blue-600 text-sm mb-4\" \n                onClick={() => router.push(backToEmailsUrl)}\n            >\n                ← Back to Emails\n            </button>\n            <EmailContent email={email} onLabelsUpdated={handleLabelsUpdated} />\n        </div>\n    );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 845, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}