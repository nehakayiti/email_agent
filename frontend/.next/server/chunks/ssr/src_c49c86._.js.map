{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/ui/search-input.tsx"],"sourcesContent":["interface SearchInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  className?: string;\n}\n\nexport function SearchInput({ value, onChange, placeholder = 'Search...', className = '' }: SearchInputProps) {\n  return (\n    <div className={`relative ${className}`}>\n      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n        <svg\n          className=\"h-5 w-5 text-gray-400\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        className=\"block w-full rounded-md border border-gray-300 bg-white pl-10 pr-3 py-2.5 text-sm shadow-sm\n                  placeholder:text-gray-500 \n                  focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\n                  transition-colors duration-150\"\n        placeholder={placeholder}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAOO,SAAS,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,WAAW,EAAE,YAAY,EAAE,EAAoB;IAC1G,qBACE,8OAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;;0BACrC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAM;oBACN,SAAQ;oBACR,MAAK;oBACL,eAAY;8BAEZ,cAAA,8OAAC;wBACC,UAAS;wBACT,GAAE;wBACF,UAAS;;;;;;;;;;;;;;;;0BAIf,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,WAAU;gBAIV,aAAa;;;;;;;;;;;;AAIrB"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/utils/date-utils.ts"],"sourcesContent":["export function formatRelativeTime(date: Date): string {\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n  \n  // Less than a minute\n  if (diffInSeconds < 60) {\n    return 'just now';\n  }\n  \n  // Less than an hour\n  const diffInMinutes = Math.floor(diffInSeconds / 60);\n  if (diffInMinutes < 60) {\n    return `${diffInMinutes}m ago`;\n  }\n  \n  // Less than a day\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  if (diffInHours < 24) {\n    return `${diffInHours}h ago`;\n  }\n  \n  // Less than a week\n  const diffInDays = Math.floor(diffInHours / 24);\n  if (diffInDays < 7) {\n    return `${diffInDays}d ago`;\n  }\n  \n  // More than a week - format as date\n  const options: Intl.DateTimeFormatOptions = {\n    month: 'short',\n    day: 'numeric'\n  };\n  \n  // Add year if not current year\n  if (date.getFullYear() !== now.getFullYear()) {\n    options.year = 'numeric';\n  }\n  \n  return date.toLocaleDateString('en-US', options);\n} "],"names":[],"mappings":";;;AAAO,SAAS,mBAAmB,IAAU;IAC3C,MAAM,MAAM,IAAI;IAChB,MAAM,gBAAgB,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;IAEpE,qBAAqB;IACrB,IAAI,gBAAgB,IAAI;QACtB,OAAO;IACT;IAEA,oBAAoB;IACpB,MAAM,gBAAgB,KAAK,KAAK,CAAC,gBAAgB;IACjD,IAAI,gBAAgB,IAAI;QACtB,OAAO,GAAG,cAAc,KAAK,CAAC;IAChC;IAEA,kBAAkB;IAClB,MAAM,cAAc,KAAK,KAAK,CAAC,gBAAgB;IAC/C,IAAI,cAAc,IAAI;QACpB,OAAO,GAAG,YAAY,KAAK,CAAC;IAC9B;IAEA,mBAAmB;IACnB,MAAM,aAAa,KAAK,KAAK,CAAC,cAAc;IAC5C,IAAI,aAAa,GAAG;QAClB,OAAO,GAAG,WAAW,KAAK,CAAC;IAC7B;IAEA,oCAAoC;IACpC,MAAM,UAAsC;QAC1C,OAAO;QACP,KAAK;IACP;IAEA,+BAA+B;IAC/B,IAAI,KAAK,WAAW,OAAO,IAAI,WAAW,IAAI;QAC5C,QAAQ,IAAI,GAAG;IACjB;IAEA,OAAO,KAAK,kBAAkB,CAAC,SAAS;AAC1C"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/ui/email-label.tsx"],"sourcesContent":["'use client';\n\nimport React, { useMemo } from 'react';\nimport { useCategoryContext } from '@/lib/category-context';\n\ninterface EmailLabelProps {\n  label: string;\n  className?: string;\n  variant?: 'default' | 'compact';\n  showPrefix?: boolean;\n}\n\n/**\n * Converts raw Gmail labels to user-friendly display labels\n */\nexport function getDisplayLabel(label: string): string {\n  // First check if it's a category label (those should be handled by the category context)\n  if (label.startsWith('CATEGORY_') || label === 'PRIMARY') {\n    return ''; // This will be handled by getCategoryInfo in components\n  }\n  \n  // For non-category labels, use this mapping\n  const labelMap: Record<string, string> = {\n    'INBOX': 'Inbox',\n    'UNREAD': 'Unread',\n    'TRASH': 'Trash',\n    'IMPORTANT': 'â˜…',\n    'ARCHIVE': 'Archive',\n  };\n  \n  return labelMap[label] || label;\n}\n\n/**\n * Gets the appropriate styling for different label types\n */\nexport function getLabelStyle(label: string): string {\n  // If it's a category label, this will be handled by the category context elsewhere\n  if (label.startsWith('CATEGORY_') || label === 'PRIMARY') {\n    return '';\n  }\n  \n  // Define different background and text colors for different labels\n  switch (label.toUpperCase()) {\n    case 'INBOX':\n      return 'bg-blue-100 text-blue-800 border border-blue-200';\n    case 'UNREAD':\n      return 'bg-yellow-100 text-yellow-800 border border-yellow-200';\n    case 'TRASH':\n      return 'bg-red-100 text-red-800 border border-red-200';\n    case 'IMPORTANT':\n      return 'bg-amber-100 text-amber-800 border border-amber-200';\n    case 'ARCHIVE':\n      return 'bg-gray-100 text-gray-800 border border-gray-200';\n    default:\n      return 'bg-gray-100 text-gray-800 border border-gray-200';\n  }\n}\n\n/**\n * Email label component that displays a user-friendly label with appropriate styling\n */\nexport function EmailLabel({ label, className = '', variant = 'default', showPrefix = true }: EmailLabelProps) {\n  const { getCategoryInfo } = useCategoryContext();\n  \n  // For category labels, get info from the context\n  const isCategoryLabel = label.startsWith('CATEGORY_') || label === 'PRIMARY';\n  const categoryInfo = isCategoryLabel ? getCategoryInfo(label) : null;\n  \n  // If this is a category label and we have category info, use that\n  if (isCategoryLabel && categoryInfo) {\n    const baseClasses = variant === 'compact' \n      ? 'px-2 py-0.5 text-xs font-medium rounded-full'\n      : 'px-2.5 py-0.5 text-xs font-medium rounded-full';\n      \n    return (\n      <span className={`${baseClasses} ${categoryInfo.color} ${className}`}>\n        {showPrefix && <span className=\"mr-1 opacity-70\">Category:</span>}\n        {categoryInfo.display_name}\n      </span>\n    );\n  }\n  \n  // For non-category labels, use the original logic\n  const displayLabel = getDisplayLabel(label);\n  const style = getLabelStyle(label);\n  const isImportant = label.toUpperCase() === 'IMPORTANT';\n  \n  // For important label, show just the star\n  if (isImportant) {\n    return (\n      <span className={`inline-flex items-center text-amber-500 ${className}`} title=\"Important\">\n        {displayLabel}\n      </span>\n    );\n  }\n  \n  // For compact variant, use smaller padding\n  const baseClasses = variant === 'compact' \n    ? 'px-2 py-0.5 text-xs font-medium rounded-full'\n    : 'px-2.5 py-0.5 text-xs font-medium rounded-full';\n  \n  return (\n    <span className={`${baseClasses} ${style} ${className}`}>\n      {showPrefix && !isImportant && label !== 'INBOX' && <span className=\"mr-1 opacity-70\">Label:</span>}\n      {displayLabel}\n    </span>\n  );\n}\n\n/**\n * Filters and maps raw Gmail labels to display-friendly EmailLabel components\n */\nexport function mapLabelsToComponents(\n  labels: string[], \n  options: { \n    showSystem?: boolean;\n    variant?: 'default' | 'compact';\n    includeCategoryLabels?: boolean;\n    showPrefix?: boolean;\n  } = {}\n): React.ReactNode[] {\n  const { showSystem = false, variant = 'default', includeCategoryLabels = false, showPrefix = true } = options;\n  \n  if (!labels || labels.length === 0) return [];\n  \n  // System labels that shouldn't be displayed\n  const systemLabels = ['EA_NEEDS_LABEL_UPDATE', 'SENT', 'DRAFT'];\n  \n  // Important label should always be first if present\n  const sortedLabels = [...labels].sort((a, b) => {\n    if (a === 'IMPORTANT') return -1;\n    if (b === 'IMPORTANT') return 1;\n    return 0;\n  });\n  \n  return sortedLabels\n    .filter(label => {\n      if (!showSystem && systemLabels.includes(label)) return false;\n      // Don't show category labels here unless explicitly requested\n      if (!includeCategoryLabels && (label.startsWith('CATEGORY_') || label === 'PRIMARY')) return false;\n      return true;\n    })\n    .map(label => (\n      <EmailLabel key={label} label={label} variant={variant} showPrefix={showPrefix} />\n    ));\n} "],"names":[],"mappings":";;;;;;;AAGA;AAHA;;;AAeO,SAAS,gBAAgB,KAAa;IAC3C,yFAAyF;IACzF,IAAI,MAAM,UAAU,CAAC,gBAAgB,UAAU,WAAW;QACxD,OAAO,IAAI,wDAAwD;IACrE;IAEA,4CAA4C;IAC5C,MAAM,WAAmC;QACvC,SAAS;QACT,UAAU;QACV,SAAS;QACT,aAAa;QACb,WAAW;IACb;IAEA,OAAO,QAAQ,CAAC,MAAM,IAAI;AAC5B;AAKO,SAAS,cAAc,KAAa;IACzC,mFAAmF;IACnF,IAAI,MAAM,UAAU,CAAC,gBAAgB,UAAU,WAAW;QACxD,OAAO;IACT;IAEA,mEAAmE;IACnE,OAAQ,MAAM,WAAW;QACvB,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAKO,SAAS,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,UAAU,SAAS,EAAE,aAAa,IAAI,EAAmB;IAC3G,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,qBAAkB,AAAD;IAE7C,iDAAiD;IACjD,MAAM,kBAAkB,MAAM,UAAU,CAAC,gBAAgB,UAAU;IACnE,MAAM,eAAe,kBAAkB,gBAAgB,SAAS;IAEhE,kEAAkE;IAClE,IAAI,mBAAmB,cAAc;QACnC,MAAM,cAAc,YAAY,YAC5B,iDACA;QAEJ,qBACE,8OAAC;YAAK,WAAW,GAAG,YAAY,CAAC,EAAE,aAAa,KAAK,CAAC,CAAC,EAAE,WAAW;;gBACjE,4BAAc,8OAAC;oBAAK,WAAU;8BAAkB;;;;;;gBAChD,aAAa,YAAY;;;;;;;IAGhC;IAEA,kDAAkD;IAClD,MAAM,eAAe,gBAAgB;IACrC,MAAM,QAAQ,cAAc;IAC5B,MAAM,cAAc,MAAM,WAAW,OAAO;IAE5C,0CAA0C;IAC1C,IAAI,aAAa;QACf,qBACE,8OAAC;YAAK,WAAW,CAAC,wCAAwC,EAAE,WAAW;YAAE,OAAM;sBAC5E;;;;;;IAGP;IAEA,2CAA2C;IAC3C,MAAM,cAAc,YAAY,YAC5B,iDACA;IAEJ,qBACE,8OAAC;QAAK,WAAW,GAAG,YAAY,CAAC,EAAE,MAAM,CAAC,EAAE,WAAW;;YACpD,cAAc,CAAC,eAAe,UAAU,yBAAW,8OAAC;gBAAK,WAAU;0BAAkB;;;;;;YACrF;;;;;;;AAGP;AAKO,SAAS,sBACd,MAAgB,EAChB,UAKI,CAAC,CAAC;IAEN,MAAM,EAAE,aAAa,KAAK,EAAE,UAAU,SAAS,EAAE,wBAAwB,KAAK,EAAE,aAAa,IAAI,EAAE,GAAG;IAEtG,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG,OAAO,EAAE;IAE7C,4CAA4C;IAC5C,MAAM,eAAe;QAAC;QAAyB;QAAQ;KAAQ;IAE/D,oDAAoD;IACpD,MAAM,eAAe;WAAI;KAAO,CAAC,IAAI,CAAC,CAAC,GAAG;QACxC,IAAI,MAAM,aAAa,OAAO,CAAC;QAC/B,IAAI,MAAM,aAAa,OAAO;QAC9B,OAAO;IACT;IAEA,OAAO,aACJ,MAAM,CAAC,CAAA;QACN,IAAI,CAAC,cAAc,aAAa,QAAQ,CAAC,QAAQ,OAAO;QACxD,8DAA8D;QAC9D,IAAI,CAAC,yBAAyB,CAAC,MAAM,UAAU,CAAC,gBAAgB,UAAU,SAAS,GAAG,OAAO;QAC7F,OAAO;IACT,GACC,GAAG,CAAC,CAAA,sBACH,8OAAC;YAAuB,OAAO;YAAO,SAAS;YAAS,YAAY;WAAnD;;;;;AAEvB"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/utils/toast-config.ts"],"sourcesContent":["// Toast configuration settings for consistent behavior across the application\n\nimport { toast, ToastOptions } from 'react-hot-toast';\n\n// Extended duration for toasts (6 seconds instead of default 3)\nexport const defaultToastOptions: ToastOptions = {\n  duration: 6000, // 6 seconds\n  position: 'top-right',\n};\n\n// Wrapper functions to ensure consistent toast behavior\nexport const showSuccessToast = (message: string, options?: ToastOptions) => {\n  return toast.success(message, { ...defaultToastOptions, ...options });\n};\n\nexport const showErrorToast = (message: string, options?: ToastOptions) => {\n  return toast.error(message, { ...defaultToastOptions, ...options });\n};\n\nexport const showLoadingToast = (message: string, options?: ToastOptions) => {\n  return toast.loading(message, { ...defaultToastOptions, ...options });\n};\n\n// Utility to dismiss all toasts\nexport const dismissAllToasts = () => {\n  toast.dismiss();\n}; "],"names":[],"mappings":"AAAA,8EAA8E;;;;;;;;AAE9E;;AAGO,MAAM,sBAAoC;IAC/C,UAAU;IACV,UAAU;AACZ;AAGO,MAAM,mBAAmB,CAAC,SAAiB;IAChD,OAAO,uJAAA,CAAA,QAAK,CAAC,OAAO,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACrE;AAEO,MAAM,iBAAiB,CAAC,SAAiB;IAC9C,OAAO,uJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACnE;AAEO,MAAM,mBAAmB,CAAC,SAAiB;IAChD,OAAO,uJAAA,CAAA,QAAK,CAAC,OAAO,CAAC,SAAS;QAAE,GAAG,mBAAmB;QAAE,GAAG,OAAO;IAAC;AACrE;AAGO,MAAM,mBAAmB;IAC9B,uJAAA,CAAA,QAAK,CAAC,OAAO;AACf"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/components/ui/email-card.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Link from 'next/link';\nimport { Email, archiveEmail, deleteEmail, updateEmailLabels, updateEmailCategory } from '@/lib/api';\nimport { formatRelativeTime } from '@/utils/date-utils';\nimport { EmailLabel, mapLabelsToComponents } from '@/components/ui/email-label';\nimport { toast } from 'react-hot-toast';\nimport { showSuccessToast, showErrorToast, showLoadingToast, dismissAllToasts } from '@/utils/toast-config';\nimport { useCategoryContext } from '@/lib/category-context';\n\n// Filter out system labels and get the primary category label for display\nfunction getPrimaryDisplayLabel(labels: string[]): string | null {\n  if (!labels || labels.length === 0) return null;\n  \n  // Priority order for display\n  const categoryLabels = [\n    'CATEGORY_PERSONAL',\n    'CATEGORY_UPDATES',\n    'CATEGORY_SOCIAL',\n    'CATEGORY_PROMOTIONS',\n    'CATEGORY_FORUMS',\n    'IMPORTANT',\n    'ARCHIVE',\n    'TRASH'\n  ];\n  \n  // Find the first matching category label\n  for (const categoryLabel of categoryLabels) {\n    if (labels.includes(categoryLabel)) {\n      return categoryLabel;\n    }\n  }\n  \n  // If no category labels, show Inbox if present\n  if (labels.includes('INBOX')) {\n    return 'INBOX';\n  }\n  \n  return null;\n}\n\n// Get category display info\nfunction getCategoryDisplayInfo(category: string): { display_name: string; color: string; description: string | null } | null {\n  // This function should be used with the CategoryContext's getCategoryInfo\n  // It remains here for compatibility with existing code, but will delegate to the context\n  \n  // Default category information if needed - we'll use the same format as CategoryContext\n  const defaultCategoryMap: Record<string, { display_name: string; color: string; description: string | null }> = {\n    'CATEGORY_PERSONAL': { display_name: 'Personal', color: 'bg-indigo-100 text-indigo-800 border border-indigo-200', description: null },\n    'CATEGORY_UPDATES': { display_name: 'Updates', color: 'bg-purple-100 text-purple-800 border border-purple-200', description: null },\n    'CATEGORY_SOCIAL': { display_name: 'Social', color: 'bg-green-100 text-green-800 border border-green-200', description: null },\n    'CATEGORY_PROMOTIONS': { display_name: 'Promotions', color: 'bg-orange-100 text-orange-800 border border-orange-200', description: null },\n    'CATEGORY_FORUMS': { display_name: 'Forums', color: 'bg-teal-100 text-teal-800 border border-teal-200', description: null },\n    'PRIMARY': { display_name: 'Primary', color: 'bg-blue-100 text-blue-800 border border-blue-200', description: null },\n  };\n\n  return defaultCategoryMap[category] || null;\n}\n\n// Separate labels into categories and regular labels\nfunction separateLabels(labels: string[]): { categories: string[]; regularLabels: string[] } {\n  const categories = labels.filter(label => label.startsWith('CATEGORY_') || label === 'PRIMARY');\n  const regularLabels = labels.filter(label => \n    !label.startsWith('CATEGORY_') && \n    !label.startsWith('EA_') && \n    label !== 'PRIMARY' &&\n    !['SENT', 'DRAFT'].includes(label)\n  );\n  \n  return { categories, regularLabels };\n}\n\ninterface EmailCardProps {\n  email: Email;\n  onClick?: () => void;\n  isDeleted?: boolean;\n  onLabelsUpdated?: (updatedEmail: Email) => void;\n}\n\nexport function EmailCard({ email, onClick, isDeleted = false, onLabelsUpdated }: EmailCardProps) {\n  // Use the category context\n  const { getCategoryInfo, categories } = useCategoryContext();\n  const [updating, setUpdating] = useState(false);\n  const [showCategoryDropdown, setShowCategoryDropdown] = useState(false);\n  const categoryBadgeRef = useRef<HTMLDivElement>(null);\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0 });\n  const [showArrowAnimation, setShowArrowAnimation] = useState(true);\n  \n  // Disable arrow animation after a short delay\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowArrowAnimation(false);\n    }, 2000);\n    \n    return () => clearTimeout(timer);\n  }, []);\n  \n  // Update dropdown position when it's shown\n  useEffect(() => {\n    if (showCategoryDropdown && categoryBadgeRef.current) {\n      const rect = categoryBadgeRef.current.getBoundingClientRect();\n      setDropdownPosition({\n        top: rect.bottom + window.scrollY,\n        left: rect.left + window.scrollX\n      });\n    }\n  }, [showCategoryDropdown]);\n  \n  // Filter out system labels\n  const filteredLabels = React.useMemo(() => {\n    if (!email.labels || email.labels.length === 0) return [];\n    \n    // Filter out system labels and category labels (we'll show categories separately)\n    const systemLabels = ['EA_NEEDS_LABEL_UPDATE', 'SENT', 'DRAFT'];\n    const visibleLabels = email.labels.filter(label => \n      !systemLabels.includes(label) && \n      !label.startsWith('CATEGORY_')\n    );\n    \n    // If this email has TRASH label, don't display INBOX label\n    if (visibleLabels.includes('TRASH')) {\n      return visibleLabels.filter(label => label !== 'INBOX');\n    }\n    \n    return visibleLabels;\n  }, [email.labels]);\n\n  // Get category display info\n  const categoryInfo = React.useMemo(() => {\n    // First check if the email has the TRASH label, and if so, prioritize it\n    if (email.labels && email.labels.includes('TRASH')) {\n      return getCategoryInfo('TRASH') || { display_name: 'Trash', color: 'bg-red-50 text-red-700', description: null };\n    }\n    \n    // If we have a category value from the email, use that\n    if (email.category) {\n      const info = getCategoryInfo(email.category);\n      if (info) return info;\n    }\n    \n    // If no category is found or the lookup failed, check if the email has a category label\n    if (email.labels) {\n      const categoryLabel = email.labels.find(label => label.startsWith('CATEGORY_') || label === 'PRIMARY');\n      if (categoryLabel) {\n        const info = getCategoryInfo(categoryLabel);\n        if (info) return info;\n      }\n    }\n    \n    // Default fallback\n    return getCategoryInfo('primary') || { display_name: 'Primary', color: 'bg-blue-50 text-blue-700', description: null };\n  }, [email.category, email.labels, getCategoryInfo]);\n\n  // Handle archive action\n  const handleArchive = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    try {\n      const toastId = showLoadingToast('Archiving email...');\n      \n      const response = await archiveEmail(email.id);\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast(response.message || 'Email archived successfully');\n        \n        // Update the email object with new labels\n        const updatedEmail = {\n          ...email,\n          labels: response.labels || email.labels,\n          // Update the category if returned from the API\n          category: response.category || email.category\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to archive email');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error archiving email';\n      showErrorToast(errorMessage);\n      console.error('Error archiving email:', error);\n    }\n  };\n  \n  // Handle trash action\n  const handleTrash = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    try {\n      const toastId = showLoadingToast('Moving to trash...');\n      \n      const response = await deleteEmail(email.id);\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast(response.message || 'Email moved to trash');\n        \n        // Update the email object with new category and labels\n        const updatedEmail = {\n          ...email,\n          category: 'trash',\n          labels: [...(email.labels || []).filter(label => label !== 'INBOX'), 'TRASH'],\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to move email to trash');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error moving email to trash';\n      showErrorToast(errorMessage);\n      console.error('Error moving email to trash:', error);\n    }\n  };\n\n  // Handle mark as read action\n  const handleMarkAsRead = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Skip if already read\n    if (email.is_read) {\n      return;\n    }\n    \n    try {\n      const toastId = showLoadingToast('Marking as read...');\n      \n      const response = await updateEmailLabels(email.id, [], ['UNREAD']);\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast('Email marked as read');\n        \n        // Update the email object with new read status\n        const updatedEmail = {\n          ...email,\n          is_read: true,\n          labels: response.labels || email.labels,\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to mark email as read');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error marking email as read';\n      showErrorToast(errorMessage);\n      console.error('Error marking email as read:', error);\n    }\n  };\n\n  // Handle mark as unread action\n  const handleMarkAsUnread = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Skip if already unread\n    if (!email.is_read) {\n      return;\n    }\n    \n    try {\n      const toastId = showLoadingToast('Marking as unread...');\n      \n      const response = await updateEmailLabels(email.id, ['UNREAD'], []);\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast('Email marked as unread');\n        \n        // Update the email object with new read status\n        const updatedEmail = {\n          ...email,\n          is_read: false,\n          labels: response.labels || email.labels,\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to mark email as unread');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error marking email as unread';\n      showErrorToast(errorMessage);\n      console.error('Error marking email as unread:', error);\n    }\n  };\n\n  // Handle category change\n  const handleCategoryChange = async (e: React.MouseEvent<HTMLElement>, newCategory: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    // Skip if already in this category\n    if (email.category?.toLowerCase() === newCategory.toLowerCase()) {\n      return;\n    }\n    \n    try {\n      setUpdating(true);\n      const toastId = showLoadingToast('Updating category...');\n      \n      const response = await updateEmailCategory(email.id, newCategory.toLowerCase());\n      \n      toast.dismiss(toastId);\n      \n      if (response.status === 'success') {\n        showSuccessToast('Category updated');\n        \n        // Update the email object with new category and labels\n        const updatedEmail = {\n          ...email,\n          category: response.category,\n          labels: response.labels,\n        };\n        \n        // Call onLabelsUpdated to update the parent component\n        if (onLabelsUpdated) {\n          onLabelsUpdated(updatedEmail);\n        }\n      } else {\n        showErrorToast(response.message || 'Failed to update category');\n      }\n    } catch (error) {\n      dismissAllToasts();\n      const errorMessage = error instanceof Error ? error.message : 'Error updating category';\n      showErrorToast(errorMessage);\n      console.error('Error updating category:', error);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  // Create the email card content\n  const emailContent = (\n    <div \n      className={`p-4 border-b border-gray-200 hover:bg-gray-50 cursor-pointer transition-all ${!email.is_read ? 'bg-slate-50' : ''}`}\n      onClick={onClick}\n    >\n      <div className=\"flex items-start gap-3\">\n        <div className=\"flex-shrink-0 mt-0.5\">\n          {!email.is_read && (\n            <div className=\"h-2 w-2 rounded-full bg-blue-600\" title=\"Unread\"></div>\n          )}\n        </div>\n        \n        <div className=\"min-w-0 flex-1\">\n          <div className=\"flex items-center justify-between mb-1\">\n            <div className=\"truncate font-medium text-sm\">\n              {email.from_email}\n            </div>\n            <div className=\"text-xs text-gray-500 whitespace-nowrap ml-2\">\n              {formatRelativeTime(new Date(email.received_at))}\n            </div>\n          </div>\n          \n          <div className=\"flex justify-between items-start\">\n            <div className=\"truncate font-medium text-base mb-1\">\n              {email.subject || '(No subject)'}\n            </div>\n          </div>\n          \n          <div className=\"text-sm text-gray-500 line-clamp-1 mb-2\">\n            {email.snippet}\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              {/* Category badge */}\n              <div className=\"relative\">\n                <div \n                  ref={categoryBadgeRef}\n                  className={`text-xs px-2 py-1 rounded-md bg-white shadow-sm cursor-pointer flex items-center gap-1 hover:shadow transition-all border border-gray-300 hover:border-gray-400 ${showCategoryDropdown ? 'ring-2 ring-blue-300 border-blue-300' : ''}`}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowCategoryDropdown(!showCategoryDropdown);\n                  }}\n                  title=\"Click to change category\"\n                >\n                  <span className=\"font-medium mr-1 text-gray-500\">Category:</span>\n                  <span className={`mr-1 px-1.5 py-0.5 rounded ${categoryInfo.color}`}>{categoryInfo.display_name}</span>\n                  <span className=\"border-l border-gray-300 pl-1 flex items-center text-gray-500 bg-gray-50 -mr-2 -my-1 py-1 px-1 rounded-r-md\">\n                    <span className=\"text-xs mr-1 font-medium\">Select</span>\n                    <svg \n                      xmlns=\"http://www.w3.org/2000/svg\" \n                      className={`h-4 w-4 transition-transform ${showCategoryDropdown ? 'rotate-180' : ''} ${\n                        showArrowAnimation ? 'animate-bounce' : ''\n                      }`} \n                      viewBox=\"0 0 24 24\" \n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      strokeWidth=\"2\" \n                      strokeLinecap=\"round\" \n                      strokeLinejoin=\"round\"\n                    >\n                      <polyline points=\"6 9 12 15 18 9\"></polyline>\n                    </svg>\n                  </span>\n                </div>\n                \n                {/* Dropdown menu */}\n                {showCategoryDropdown && (\n                  <div \n                    className=\"fixed inset-0 z-10\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      setShowCategoryDropdown(false);\n                    }}\n                  >\n                    <div \n                      style={{\n                        position: 'absolute',\n                        top: `${dropdownPosition.top}px`,\n                        left: `${dropdownPosition.left}px`,\n                      }}\n                      className=\"mt-1 w-48 bg-white rounded-md shadow-lg z-20 border border-gray-200 overflow-hidden\"\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      <div className=\"py-1 max-h-60 overflow-y-auto\">\n                        <div className=\"px-4 py-2 text-xs font-medium text-gray-500 border-b border-gray-100 bg-gray-50\">\n                          Change category\n                        </div>\n                        {updating && (\n                          <div className=\"px-4 py-2 text-xs text-gray-500 flex items-center justify-center\">\n                            <svg className=\"animate-spin h-3 w-3 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                            Updating...\n                          </div>\n                        )}\n                        {categories\n                          .slice() // Create a copy to avoid mutating the original array\n                          .sort((a, b) => a.priority - b.priority) // Sort by priority\n                          .map((category) => {\n                          const isSelected = email.category?.toLowerCase() === category.name.toLowerCase();\n                          return (\n                            <button\n                              key={category.name}\n                              className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-50 flex items-center justify-between ${\n                                isSelected ? 'bg-gray-50 font-medium' : ''\n                              }`}\n                              onClick={(e) => {\n                                handleCategoryChange(e, category.name.toLowerCase());\n                                setShowCategoryDropdown(false);\n                              }}\n                              disabled={updating}\n                            >\n                              <span>{category.display_name}</span>\n                              {isSelected && (\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                              )}\n                            </button>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n              \n              {/* Regular labels */}\n              <div className=\"flex flex-wrap gap-1\">\n                {mapLabelsToComponents(filteredLabels, { variant: 'compact', showPrefix: false })}\n              </div>\n            </div>\n            \n            {/* Email actions */}\n            <div className=\"ml-auto flex gap-1\">\n              {!isDeleted && !email.labels.includes('TRASH') && (\n                <>\n                  {email.is_read ? (\n                    <button\n                      onClick={handleMarkAsUnread}\n                      className=\"p-1 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded\"\n                      title=\"Mark as unread\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                      </svg>\n                    </button>\n                  ) : (\n                    <button\n                      onClick={handleMarkAsRead}\n                      className=\"p-1 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded\"\n                      title=\"Mark as read\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 19v-8.93a2 2 0 01.89-1.664l7-4.666a2 2 0 012.22 0l7 4.666A2 2 0 0121 10.07V19M3 19a2 2 0 002 2h14a2 2 0 002-2M3 19l6.75-4.5M21 19l-6.75-4.5M3 10l6.75 4.5M21 10l-6.75 4.5m0 0l-1.14.76a2 2 0 01-2.22 0l-1.14-.76\" />\n                      </svg>\n                    </button>\n                  )}\n                \n                  <button\n                    onClick={handleArchive}\n                    className=\"p-1 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded\"\n                    title=\"Archive\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8\" />\n                    </svg>\n                  </button>\n                  \n                  <button\n                    onClick={handleTrash}\n                    className=\"p-1 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded\"\n                    title=\"Move to trash\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  \n  // If there's a click handler, don't wrap with Link\n  if (onClick) {\n    return emailContent;\n  }\n  \n  // Otherwise, wrap with Link for navigation\n  return (\n    <Link href={`/emails/${email.id}`} className=\"block\">\n      {emailContent}\n    </Link>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1131, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilkayiti/email_agent/frontend/src/app/emails/deleted/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef, useCallback } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { getTrashedEmails, emptyTrash, type Email, type EmailsParams } from '@/lib/api';\nimport { isAuthenticated, handleAuthError } from '@/lib/auth';\nimport { SearchInput } from '@/components/ui/search-input';\nimport { EmailCard } from '@/components/ui/email-card';\nimport { Toaster } from 'react-hot-toast';\nimport { toast } from 'react-hot-toast';\n\nexport default function TrashPage() {\n    const router = useRouter();\n    const [emails, setEmails] = useState<Email[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [hasMore, setHasMore] = useState(true);\n    const [page, setPage] = useState(1);\n    const [totalEmails, setTotalEmails] = useState(0);\n    const [initialLoadComplete, setInitialLoadComplete] = useState(false);\n    const [loadingMore, setLoadingMore] = useState(false);\n    const [isEmptyingTrash, setIsEmptyingTrash] = useState(false);\n    \n    // Create a ref for the observer target element\n    const observerTarget = useRef<HTMLDivElement>(null);\n\n    // Function to fetch trashed emails with pagination\n    const fetchTrashedEmails = useCallback(async (pageNum: number, isInitialLoad: boolean = false) => {\n        try {\n            if (!isAuthenticated()) {\n                console.log('User not authenticated, redirecting to authentication');\n                handleAuthError();\n                return;\n            }\n\n            if (isInitialLoad) {\n                setLoading(true);\n            } else {\n                setLoadingMore(true);\n            }\n            \n            console.log(`Fetching trashed emails for page ${pageNum}...`);\n            \n            const params: EmailsParams = {\n                page: pageNum,\n                limit: 20,\n            };\n            \n            const response = await getTrashedEmails(params);\n            console.log('Trashed emails fetched successfully:', response.emails.length, 'emails');\n            \n            if (isInitialLoad) {\n                setEmails(response.emails);\n            } else {\n                setEmails(prev => [...prev, ...response.emails]);\n            }\n            \n            setTotalEmails(response.pagination.total);\n            setHasMore(response.pagination.has_next);\n            setError(null);\n            \n            if (isInitialLoad) {\n                setInitialLoadComplete(true);\n            }\n        } catch (error) {\n            console.error('Error fetching trashed emails:', error);\n            \n            // Check if it's an authentication error\n            const errorMessage = error instanceof Error ? error.message : 'Error fetching trashed emails';\n            if (errorMessage.includes('Authentication failed') || \n                errorMessage.includes('token') || \n                errorMessage.includes('401')) {\n                handleAuthError();\n                return;\n            }\n            \n            setError(errorMessage);\n        } finally {\n            setLoading(false);\n            setLoadingMore(false);\n        }\n    }, [router]);\n\n    // Initial data load\n    useEffect(() => {\n        setPage(1);\n        setEmails([]);\n        setHasMore(true);\n        setInitialLoadComplete(false);\n        fetchTrashedEmails(1, true);\n    }, [fetchTrashedEmails]);\n\n    // Set up intersection observer for infinite scrolling\n    useEffect(() => {\n        if (!initialLoadComplete || !hasMore || loadingMore) return;\n        \n        const observer = new IntersectionObserver(\n            entries => {\n                if (entries[0].isIntersecting && hasMore && !loadingMore) {\n                    const nextPage = page + 1;\n                    setPage(nextPage);\n                    fetchTrashedEmails(nextPage);\n                }\n            },\n            { threshold: 0.5 }\n        );\n        \n        if (observerTarget.current) {\n            observer.observe(observerTarget.current);\n        }\n        \n        return () => {\n            if (observerTarget.current) {\n                observer.unobserve(observerTarget.current);\n            }\n        };\n    }, [initialLoadComplete, hasMore, loadingMore, page, fetchTrashedEmails]);\n\n    // Add a handler for labels updated\n    const handleLabelsUpdated = (updatedEmail: Email) => {\n        // Update the emails list with the updated email\n        setEmails(prevEmails => \n            prevEmails.map(email => \n                email.id === updatedEmail.id ? updatedEmail : email\n            )\n        );\n    };\n\n    // Function to handle emptying the trash\n    const handleEmptyTrash = async () => {\n        if (isEmptyingTrash) return;\n        \n        if (confirm('Are you sure you want to permanently delete all items in Trash? This action cannot be undone.')) {\n            try {\n                setIsEmptyingTrash(true);\n                const result = await emptyTrash();\n                \n                if (result.success) {\n                    toast.success(result.message || 'Trash emptied successfully');\n                    setEmails([]);\n                    setTotalEmails(0);\n                } else {\n                    toast.error(result.message || 'Failed to empty trash');\n                }\n            } catch (error) {\n                console.error('Error emptying trash:', error);\n                toast.error('Failed to empty trash. Please try again.');\n            } finally {\n                setIsEmptyingTrash(false);\n            }\n        }\n    };\n\n    if (loading) {\n        return (\n            <div className=\"flex items-center justify-center h-screen\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"flex items-center justify-center h-screen\">\n                <div className=\"bg-white rounded-2xl shadow-lg p-8 max-w-md w-full mx-4\">\n                    <div className=\"text-center\">\n                        <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Error Loading Trashed Emails</h2>\n                        <p className=\"text-gray-600\">{error}</p>\n                        <button\n                            onClick={() => window.location.reload()}\n                            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-500\"\n                        >\n                            Try Again\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n    const filteredEmails = emails.filter(email => {\n        const matchesSearch = !searchTerm || \n            email.subject?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            email.from_email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            email.snippet.toLowerCase().includes(searchTerm.toLowerCase());\n        return matchesSearch;\n    });\n\n    return (\n        <div className=\"container mx-auto max-w-6xl\">\n            <Toaster position=\"top-right\" toastOptions={{ duration: 6000 }} />\n            \n            {/* Trash notification banner */}\n            <div className=\"bg-gray-100 border-b border-gray-200 py-3 px-4 mb-4 flex items-center justify-between\">\n                <div className=\"text-gray-700\">\n                    Messages that have been in Trash more than 30 days will be automatically deleted.\n                </div>\n                <button \n                    onClick={handleEmptyTrash}\n                    disabled={isEmptyingTrash || emails.length === 0}\n                    className={`text-blue-600 hover:text-blue-800 font-medium ${\n                        isEmptyingTrash || emails.length === 0 ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                >\n                    {isEmptyingTrash ? (\n                        <span className=\"flex items-center\">\n                            <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-blue-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                            Emptying...\n                        </span>\n                    ) : 'Empty Trash now'}\n                </button>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n                <div className=\"p-4 border-b border-gray-200\">\n                    <div className=\"flex justify-between items-center mb-4\">\n                        <h1 className=\"text-xl font-semibold text-gray-900\">\n                            Trash\n                            {totalEmails > 0 && <span className=\"text-gray-500 text-lg ml-2\">({totalEmails})</span>}\n                        </h1>\n                        <div className=\"w-64\">\n                            <SearchInput \n                                value={searchTerm} \n                                onChange={setSearchTerm} \n                                placeholder=\"Search in trash...\" \n                            />\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end\">\n                        <button\n                            onClick={() => router.push('/emails?view=inbox')}\n                            className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 flex-shrink-0\"\n                        >\n                            Back to Inbox\n                        </button>\n                    </div>\n                </div>\n                \n                <p className=\"mt-1 text-sm text-gray-600 mb-4\">\n                    {totalEmails} {totalEmails === 1 ? 'trashed email' : 'trashed emails'} found\n                </p>\n\n                {/* Email list */}\n                <div className=\"space-y-4\">\n                    {filteredEmails.length === 0 ? (\n                        <div className=\"bg-white rounded-2xl shadow-md p-8 text-center\">\n                            <h3 className=\"text-lg font-medium text-gray-900\">No trashed emails found</h3>\n                            <p className=\"mt-2 text-sm text-gray-500\">\n                                When emails are trashed in Gmail, they will appear here\n                            </p>\n                        </div>\n                    ) : (\n                        filteredEmails.map((email) => (\n                            <EmailCard \n                                key={email.id} \n                                email={email} \n                                isDeleted={true}\n                                onLabelsUpdated={handleLabelsUpdated}\n                                onClick={() => router.push(`/emails/${email.id}`)}\n                            />\n                        ))\n                    )}\n                    \n                    {/* Loading indicator and observer target */}\n                    {hasMore && (\n                        <div \n                            ref={observerTarget} \n                            className=\"py-4 flex justify-center\"\n                        >\n                            {loadingMore && (\n                                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}